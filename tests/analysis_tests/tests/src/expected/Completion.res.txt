Complete src/Completion.res 1:11
posCursor:[1:11] posNoWhite:[1:10] Found expr:[1:3->1:11]
Pexp_ident MyList.m:[1:3->1:11]
Completable: Cpath Value[MyList, m]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[MyList, m]
Path MyList.m
[{
    "label": "mapReverse",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nEquivalent to:\n\n```res\nmap(someList, f)->reverse\n```\n\n## Examples\n\n```rescript\nlist{3, 4, 5}->Belt.List.mapReverse(x => x * x) /* list{25, 16, 9} */\n```\n"}
  }, {
    "label": "makeBy",
    "kind": 12,
    "tags": [],
    "detail": "(int, int => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "\nReturn a list of length `numItems` with element `i` initialized with `f(i)`.\nReturns an empty list if `numItems` is negative.\n\n## Examples\n\n```rescript\nBelt.List.makeBy(5, i => i) // list{0, 1, 2, 3, 4}\n\nBelt.List.makeBy(5, i => i * i) // list{0, 1, 4, 9, 16}\n```\n"}
  }, {
    "label": "make",
    "kind": 12,
    "tags": [],
    "detail": "(int, 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "\nReturns a list of length `numItems` with each element filled with value `v`. Returns an empty list if `numItems` is negative.\n\n## Examples\n\n```rescript\nBelt.List.make(3, 1) // list{1, 1, 1}\n```\n"}
  }, {
    "label": "mapReverse2U",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, t<'b>, ('a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `mapReverse2` instead\n\n Uncurried version of [mapReverse2](#mapReverse2). "}
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nReturns a new list with `f` applied to each element of `someList`.\n\n## Examples\n\n```rescript\nlist{1, 2}->Belt.List.map(x => x + 1) // list{3, 4}\n```\n"}
  }, {
    "label": "mapWithIndexU",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, (int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `mapWithIndex` instead\n\n Uncurried version of [mapWithIndex](#mapWithIndex). "}
  }, {
    "label": "mapU",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `map` instead\n\n Uncurried version of [map](#map). "}
  }, {
    "label": "makeByU",
    "kind": 12,
    "tags": [1],
    "detail": "(int, int => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `makeBy` instead\n\n Uncurried version of [makeBy](#makeBy) "}
  }, {
    "label": "mapReverse2",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'b>, ('a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": "\nEquivalent to: `zipBy(xs, ys, f)->reverse`\n\n## Examples\n\n```rescript\n\nBelt.List.mapReverse2(list{1, 2, 3}, list{1, 2}, (a, b) => a + b) // list{4, 2}\n```\n"}
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies `f` to each element of `someList`.\nFunction `f` takes two arguments: the index starting from 0 and the element from `someList`, in that order.\n\n## Examples\n\n```rescript\nlist{1, 2, 3}->Belt.List.mapWithIndex((index, x) => index + x) // list{1, 3, 5}\n```\n"}
  }, {
    "label": "mapReverseU",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `mapReverse` instead\n\n Uncurried version of [mapReverse](#mapReverse). "}
  }]

Complete src/Completion.res 3:9
posCursor:[3:9] posNoWhite:[3:8] Found expr:[3:3->3:9]
Pexp_ident Array.:[3:3->3:9]
Completable: Cpath Value[Array, ""]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Array, ""]
Path Array.
[{
    "label": "splice",
    "kind": 12,
    "tags": [],
    "detail": "(\n  array<'a>,\n  ~start: int,\n  ~remove: int,\n  ~insert: array<'a>,\n) => unit",
    "documentation": null
  }, {
    "label": "concat",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`concat(array1, array2)` concatenates the two arrays, creating a new array.\n\nSee [`Array.concat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat) on MDN.\n\n## Examples\n```rescript\nlet array1 = [\"hi\", \"hello\"]\nlet array2 = [\"yay\", \"wehoo\"]\n\nlet someArray = array1->Array.concat(array2)\n\nConsole.log(someArray) // [\"hi\", \"hello\", \"yay\", \"wehoo\"]\n```\n"}
  }, {
    "label": "filterMap",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => option<'b>) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`filterMap(array, fn)`\n\nCalls `fn` for each element and returns a new array containing results of the `fn` calls which are not `None`.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\nConsole.log(\n  array->Array.filterMap(item =>\n    switch item {\n    | \"Hello\" => Some(item->String.length)\n    | _ => None\n    }\n  ),\n) // [5]\n```\n"}
  }, {
    "label": "shift",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`shift(array)` removes the first item in the array, and returns it.\n\nBeware this will *mutate* the array.\n\nSee [`Array.shift`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nlet lastItem = someArray->Array.shift // \"hi\"\n\nConsole.log(someArray) // [\"hello\"]. Notice first item is gone.\n```\n"}
  }, {
    "label": "findMap",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => option<'b>) => option<'b>",
    "documentation": {"kind": "markdown", "value": "\n  `findMap(arr, fn)`\n\n  Calls `fn` for each element and returns the first value from `fn` that is `Some(_)`.\n  Otherwise returns `None`\n\n  ```res example\n  Array.findMap([1, 2, 3], n => mod(n, 2) == 0 ? Some(n - 2) : None) == Some(0) // true\n  ```\n"}
  }, {
    "label": "concatMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<array<'a>>) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`concatMany(array1, arrays)` concatenates array1 with several other arrays, creating a new array.\n\nSee [`Array.concat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat) on MDN.\n\n## Examples\n```rescript\nlet array1 = [\"hi\", \"hello\"]\nlet array2 = [\"yay\"]\nlet array3 = [\"wehoo\"]\n\nlet someArray = array1->Array.concatMany([array2, array3])\n\nConsole.log(someArray) // [\"hi\", \"hello\", \"yay\", \"wehoo\"]\n```\n"}
  }, {
    "label": "joinWith",
    "kind": 12,
    "tags": [1],
    "detail": "(array<string>, string) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `join` instead\n\n\n`joinWith(array, separator)` produces a string where all items of `array` are printed, separated by `separator`. Array items must be strings, to join number or other arrays, use `joinWithUnsafe`. Under the hood this will run JavaScript's `toString` on all the array items.\n\n## Examples\n```rescript\nlet array = [\"One\", \"Two\", \"Three\"]\n\nConsole.log(array->Array.joinWith(\" -- \")) // One -- Two -- Three\n```\n"}
  }, {
    "label": "joinWithUnsafe",
    "kind": 12,
    "tags": [1],
    "detail": "(array<'a>, string) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `joinUnsafe` instead\n\n\n`joinWithUnsafe(array, separator)` produces a string where all items of `array` are printed, separated by `separator`. Under the hood this will run JavaScript's `toString` on all the array items.\n\n## Examples\n```rescript\nlet array = [1, 2, 3]\n\nConsole.log(array->Array.joinWithUnsafe(\" -- \")) // 1 -- 2 -- 3\n```\n"}
  }, {
    "label": "reduceRight",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'b, ('b, 'a) => 'b) => 'b",
    "documentation": {"kind": "markdown", "value": "\n  `reduceRight(xs, init, fn)`\n\n  Works like `Array.reduce`; except that function `fn` is applied to each item of `xs` from the last back to the first.\n\n  ```res example\n  Array.reduceRight([\"a\", \"b\", \"c\", \"d\"], \"\", (a, b) => a ++ b) == \"dcba\"\n  ```\n"}
  }, {
    "label": "reduceRightWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'b, ('b, 'a, int) => 'b) => 'b",
    "documentation": {"kind": "markdown", "value": "\n  `reduceRightWithIndex(xs, init, fn)`\n\n  Like `reduceRight`, but with an additional index argument on the callback function.\n\n  ```res example\n  Array.reduceRightWithIndex([1, 2, 3, 4], 0, (acc, x, i) => acc + x + i) == 16\n  ```\n"}
  }, {
    "label": "toShuffled",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`toShuffled(array)` returns a new array with all items in `array` in a random order.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\nlet shuffledArray = array->Array.toShuffled\n\nConsole.log(shuffledArray)\n```\n"}
  }, {
    "label": "getSymbol",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Symbol.t) => option<'b>",
    "documentation": null
  }, {
    "label": "getSymbolUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Symbol.t) => 'b",
    "documentation": null
  }, {
    "label": "findIndexOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => option<int>",
    "documentation": {"kind": "markdown", "value": "\n`findIndexOpt(array, checker)` returns the index of the first element of `array` where the provided `checker` function returns true.\n\nReturns `None` if no item matches.\n\nSee [`Array.findIndex`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex) on MDN.\n\n## Examples\n```rescript\ntype languages = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, TypeScript, JavaScript]\n\nswitch array->Array.findIndexOpt(item => item == ReScript) {\n| None => Console.log(\"Ahh, no ReScript...\")\n| Some(index) => Console.log(\"Yay, ReScript at index \" ++ Int.toString(index))\n}\n```\n"}
  }, {
    "label": "shuffle",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => unit",
    "documentation": {"kind": "markdown", "value": "\n`shuffle(array)` randomizes the position of all items in `array`.\n\nBeware this will *mutate* the array.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\narray->Array.shuffle\n\nConsole.log(array)\n```\n"}
  }, {
    "label": "copy",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`copy(array)` makes a copy of the array with the items in it, but does not make copies of the items themselves.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3]\nlet copyOfMyArray = myArray->Array.copy\n\nConsole.log(copyOfMyArray) // [1, 2, 3]\nConsole.log(myArray === copyOfMyArray) // false\n```\n"}
  }, {
    "label": "setUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": {"kind": "markdown", "value": "\n`setUnsafe(array, index, item)` sets the provided `item` at `index` of `array`.\n\nBeware this will *mutate* the array, and is *unsafe*.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\narray->Array.setUnsafe(1, \"Hello\")\n\nConsole.log(array[1]) // \"Hello\"\n```\n"}
  }, {
    "label": "findIndexWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => int",
    "documentation": {"kind": "markdown", "value": "\n`findIndexWithIndex(array, checker)` returns the index of the first element of `array` where the provided `checker` function returns true.\n\nReturns `-1` if the item does not exist. Consider using `Array.findIndexOpt` if you want an option instead (where `-1` would be `None`).\n\nSee [`Array.findIndex`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex) on MDN.\n\n## Examples\n```rescript\ntype languages = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, JavaScript]\n\nlet isReScriptFirst = array->Array.findIndexWithIndex((item, index) => index === 0 && item == ReScript)\nlet isTypeScriptFirst = array->Array.findIndexWithIndex((item, index) => index === 0 && item == TypeScript)\n\nConsole.log(isReScriptFirst) // 0\nConsole.log(isTypeScriptFirst) // -1\n```\n"}
  }, {
    "label": "someWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\n`someWithIndex(array, checker)` returns true if running the provided `checker` function on any element in `array` returns true.\n\nSee [`Array.some`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\nConsole.log(array->Array.someWithIndex((greeting, index) => greeting === \"Hello\" && index === 0)) // true\n```\n"}
  }, {
    "label": "slice",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~start: int, ~end: int) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`slice(array, ~start, ~end)` creates a new array of items copied from `array` from `start` until (but not including) `end`.\n\nSee [`Array.slice`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice) on MDN.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3, 4]\n\nConsole.log(myArray->Array.slice(~start=1, ~end=3)) // [2, 3]\n```\n"}
  }, {
    "label": "fillToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, ~start: int) => unit",
    "documentation": {"kind": "markdown", "value": "\n`fillToEnd(array, value, ~start)` fills `array` with `value` from the `start` index.\n\nBeware this will *mutate* the array.\n\nSee [`Array.fill`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill) on MDN.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3, 4]\nmyArray->Array.fillToEnd(9, ~start=1)\n\nConsole.log(myArray) // [1, 9, 9, 9]\n```\n"}
  }, {
    "label": "includes",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => bool",
    "documentation": {"kind": "markdown", "value": "\n`includes(array, item)` checks whether `array` includes `item`, by doing a [strict check for equality](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality).\n\nSee [`Array.includes`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes) on MDN.\n\n## Examples\n```rescript\nConsole.log([1, 2]->Array.includes(1)) // true\nConsole.log([1, 2]->Array.includes(3)) // false\nConsole.log([{\"language\": \"ReScript\"}]->Array.includes({\"language\": \"ReScript\"})) // false, because of strict equality\n```\n"}
  }, {
    "label": "fromInitializer",
    "kind": 12,
    "tags": [],
    "detail": "(~length: int, int => 'a) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n  `fromInitializer(~length, f)`\n\n  Creates an array of length `length` initialized with the value returned from `f ` for each index.\n\n  ```res example\n  Array.fromInitializer(~length=3, i => i + 3) == [3, 4, 5]\n  ```\n"}
  }, {
    "label": "find",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`find(array, checker)` returns the first element of `array` where the provided `checker` function returns true.\n\nSee [`Array.find`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find) on MDN.\n\n## Examples\n```rescript\ntype languages = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, TypeScript, JavaScript]\n\nswitch array->Array.find(item => item == ReScript) {\n| None => Console.log(\"No item...\")\n| Some(_) => Console.log(\"Yay, ReScript!\")\n}\n```\n"}
  }, {
    "label": "make",
    "kind": 12,
    "tags": [],
    "detail": "(~length: int, 'a) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n  `make(~length, init)`\n\n  Creates an array of length `length` initialized with the value of `init`.\n\n  ```res example\n  Array.make(~length=3, #apple) == [#apple, #apple, #apple]\n  ```\n"}
  }, {
    "label": "lastIndexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, int) => int",
    "documentation": null
  }, {
    "label": "toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => string",
    "documentation": null
  }, {
    "label": "toSpliced",
    "kind": 12,
    "tags": [],
    "detail": "(\n  array<'a>,\n  ~start: int,\n  ~remove: int,\n  ~insert: array<'a>,\n) => array<'a>",
    "documentation": null
  }, {
    "label": "sort",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, 'a) => Ordering.t) => unit",
    "documentation": {"kind": "markdown", "value": "\n`sort(array, comparator)` sorts `array` in-place using the `comparator` function.\n\nBeware this will *mutate* the array.\n\nSee [`Array.sort`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) on MDN.\n\n## Examples\n```rescript\nlet someArray = [3, 2, 1]\nsomeArray->Array.sort((a, b) => float(a - b))\n\nConsole.log(someArray) // [1, 2, 3]\n```\n"}
  }, {
    "label": "length",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => int",
    "documentation": {"kind": "markdown", "value": "\n`length(array)` returns the length of (i.e. number of items in) the array.\n\nSee [`Array.length`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\n\nConsole.log(someArray->Array.length) // 2\n```\n"}
  }, {
    "label": "every",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\n`every(array, predicate)` returns true if `predicate` returns true for all items in `array`.\n\nSee [`Array.every`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every) on MDN.\n\n## Examples\n```rescript\nlet array = [1, 2, 3, 4]\n\nConsole.log(array->Array.every(num => num <= 4)) // true\nConsole.log(array->Array.every(num => num === 1)) // false\n```\n"}
  }, {
    "label": "flat",
    "kind": 12,
    "tags": [],
    "detail": "array<array<'a>> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`flat(arrays)` concatenates an array of arrays into a single array.\n\nSee [`Array.flat`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat) on MDN.\n\n## Examples\n```rescript\nConsole.log([[1], [2], [3, 4]]->Array.flat) // [1, 2, 3, 4]\n```\n"}
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`map(array, fn)` returns a new array with all elements from `array`, each element transformed using the provided `fn`.\n\nSee [`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\nlet mappedArray = array->Array.map(greeting => greeting ++ \" to you\")\n\nConsole.log(mappedArray) // [\"Hello to you\", \"Hi to you\", \"Good bye to you\"]\n```\n"}
  }, {
    "label": "with",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => array<'a>",
    "documentation": null
  }, {
    "label": "lastIndexOfOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => option<int>",
    "documentation": null
  }, {
    "label": "toReversed",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`toReversed(array)` creates a new array with all items from `array` in reversed order.\n\nSee [`Array.toReversed`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nlet reversed = someArray->Array.toReversed\n\nConsole.log(reversed) // [\"hello\", \"h1\"]\nConsole.log(someArray) // [\"h1\", \"hello\"]. Original unchanged\n```\n"}
  }, {
    "label": "copyWithin",
    "kind": 12,
    "tags": [],
    "detail": "(\n  array<'a>,\n  ~target: int,\n  ~start: int,\n  ~end: int,\n) => array<'a>",
    "documentation": null
  }, {
    "label": "toString",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => string",
    "documentation": {"kind": "markdown", "value": "\n`toString(array)` stringifies `array` by running `toString` on all of the array elements and joining them with \",\".\n\nSee [`Array.toString`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString) on MDN.\n\n## Examples\n```rescript\nlet array = [1, 2, 3, 4]\n\nConsole.log(array->Array.toString) // \"1,2,3,4\"\n```\n"}
  }, {
    "label": "everyWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\n`everyWithIndex(array, checker)` returns true if all items in `array` returns true when running the provided `checker` function.\n\nSee [`Array.every`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every) on MDN.\n\n## Examples\n```rescript\nlet array = [1, 2, 3, 4]\n\nConsole.log(array->Array.everyWithIndex((num, index) => index < 2 && num <= 2)) // true\nConsole.log(array->Array.everyWithIndex((num, index) => index < 2 && num >= 2)) // false\n```\n"}
  }, {
    "label": "fill",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, ~start: int, ~end: int) => unit",
    "documentation": {"kind": "markdown", "value": "\n`fill(array, value, ~start, ~end)` fills `array` with `value` from `start` to `end`.\n\nBeware this will *mutate* the array.\n\nSee [`Array.fill`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill) on MDN.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3, 4]\nmyArray->Array.fill(9, ~start=1, ~end=2)\n\nConsole.log(myArray) // [1, 9, 9, 4]\n```\n"}
  }, {
    "label": "findWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`findWithIndex(array, checker)` returns the first element of `array` where the provided `checker` function returns true.\n\nSee [`Array.find`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find) on MDN.\n\n## Examples\n```rescript\ntype languages = ReScript | TypeScript | JavaScript\n\nlet array = [TypeScript, JavaScript, ReScript]\n\nswitch array->Array.findWithIndex((item, index) => index > 1 && item == ReScript) {\n| None => Console.log(\"No item...\")\n| Some(_) => Console.log(\"Yay, ReScript exists in a later position!\")\n}\n```\n"}
  }, {
    "label": "reverse",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => unit",
    "documentation": {"kind": "markdown", "value": "\n`reverse(array)` reverses the order of the items in `array`.\n\nBeware this will *mutate* the array.\n\nSee [`Array.reverse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nsomeArray->Array.reverse\n\nConsole.log(someArray) // [\"hello\", \"h1\"]\n```\n"}
  }, {
    "label": "getUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => 'a",
    "documentation": {"kind": "markdown", "value": "\n`getUnsafe(array, index)` returns the element at `index` of `array`.\n\nThis is _unsafe_, meaning it will return `undefined` value if `index` does not exist in `array`.\n\nUse `Array.getUnsafe` only when you are sure the `index` exists (i.e. when using for-loop).\n\n## Examples\n```rescript\nlet array = [1, 2, 3]\nfor index in 0 to array->Array.length - 1 {\n  let value = array->Array.getUnsafe(index)\n  Console.log(value)\n}\n```\n"}
  }, {
    "label": "unshiftMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => unit",
    "documentation": {"kind": "markdown", "value": "\n`unshiftMany(array, itemsArray)` inserts many new items to the start of the array.\n\nBeware this will *mutate* the array.\n\nSee [`Array.push`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nsomeArray->Array.unshiftMany([\"yay\", \"wehoo\"])\n\nConsole.log(someArray) // [\"yay\", \"wehoo\", \"hi\", \"hello\"]\n```\n"}
  }, {
    "label": "lastIndexOf",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "filter",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`filter(array, checker)` returns a new array containing all elements from `array` for which the provided `checker` function returns true.\n\nSee [`Array.filter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) on MDN.\n\n## Examples\n```rescript\nlet array = [1, 2, 3, 4]\n\nConsole.log(array->Array.filter(num => num > 2)) // [3, 4]\n```\n"}
  }, {
    "label": "compare",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>, ('a, 'a) => Ordering.t) => Ordering.t",
    "documentation": null
  }, {
    "label": "join",
    "kind": 12,
    "tags": [],
    "detail": "(array<string>, string) => string",
    "documentation": {"kind": "markdown", "value": "\n`join(array, separator)` produces a string where all items of `array` are printed, separated by `separator`. Array items must be strings, to join number or other arrays, use `joinUnsafe`. Under the hood this will run JavaScript's `toString` on all the array items.\n\nSee [Array.join](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join)\n\n## Examples\n```rescript\nlet array = [\"One\", \"Two\", \"Three\"]\n\nConsole.log(array->Array.join(\" -- \")) // One -- Two -- Three\n```\n"}
  }, {
    "label": "last",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`last(array)` returns the last element of `array`.\n\nReturns `None` if the array is empty.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\narray->Array.last == Some(\"Good bye\") // true\n[]->Array.last == None // true\n```\n"}
  }, {
    "label": "isArray",
    "kind": 12,
    "tags": [],
    "detail": "'a => bool",
    "documentation": null
  }, {
    "label": "indexOfOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => option<int>",
    "documentation": {"kind": "markdown", "value": "\n`indexOfOpt(array, item)` returns an option of the index of the provided `item` in `array`. Uses [strict check for equality](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality) when comparing items.\n\nSee [`Array.indexOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf) on MDN.\n\n## Examples\n```rescript\nConsole.log([1, 2]->Array.indexOfOpt(2)) // Some(1)\nConsole.log([1, 2]->Array.indexOfOpt(3)) // None\nConsole.log([{\"language\": \"ReScript\"}]->Array.indexOfOpt({\"language\": \"ReScript\"})) // None, because of strict equality\n```\n"}
  }, {
    "label": "forEachWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => unit) => unit",
    "documentation": {"kind": "markdown", "value": "\n`forEachWithIndex(array, fn)` runs the provided `fn` on every element of `array`.\n\nSee [`Array.forEach`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\narray->Array.forEachWithIndex((item, index) => {\n  Console.log(\"At item \" ++ Int.toString(index) ++ \": \" ++ item)\n})\n```\n"}
  }, {
    "label": "reduce",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'b, ('b, 'a) => 'b) => 'b",
    "documentation": {"kind": "markdown", "value": "\n  `reduce(xs, init, fn)`\n\n  Applies `fn` to each element of `xs` from beginning to end. Function `fn` has two parameters: the item from the list and an “accumulator”; which starts with a value of `init`. `reduce` returns the final value of the accumulator.\n\n  ```res example\n  Array.reduce([2, 3, 4], 1, (a, b) => a + b) == 10\n\n  Array.reduce([\"a\", \"b\", \"c\", \"d\"], \"\", (a, b) => a ++ b) == \"abcd\"\n  ```\n"}
  }, {
    "label": "sliceToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~start: int) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`sliceToEnd(array, start)` creates a new array from `array`, with all items from `array` starting from `start`.\n\nSee [`Array.slice`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice) on MDN.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3, 4]\n\nConsole.log(myArray->Array.sliceToEnd(~start=1)) // [2, 3, 4]\n```\n"}
  }, {
    "label": "fromArrayLikeWithMap",
    "kind": 12,
    "tags": [],
    "detail": "(Js.Array2.array_like<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "fillAll",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": {"kind": "markdown", "value": "\n`fillAll(array, value)` fills the entire `array` with `value`.\n\nBeware this will *mutate* the array.\n\nSee [`Array.fill`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill) on MDN.\n\n## Examples\n```rescript\nlet myArray = [1, 2, 3, 4]\nmyArray->Array.fillAll(9)\n\nConsole.log(myArray) // [9, 9, 9, 9]\n```\n"}
  }, {
    "label": "set",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": {"kind": "markdown", "value": "\n`set(array, index, item)` sets the provided `item` at `index` of `array`.\n\nBeware this will *mutate* the array.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\narray->Array.set(1, \"Hello\")\n\nConsole.log(array[1]) // \"Hello\"\n```\n"}
  }, {
    "label": "filterWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`filterWithIndex(array, checker)` returns a new array containing all elements from `array` for which the provided `checker` function returns true.\n\nSee [`Array.filter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) on MDN.\n\n## Examples\n```rescript\nlet array = [1, 2, 3, 4]\n\nConsole.log(array->Array.filterWithIndex((num, index) => index === 0 || num === 2)) // [1, 2]\n```\n"}
  }, {
    "label": "findIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => int",
    "documentation": {"kind": "markdown", "value": "\n`findIndex(array, checker)` returns the index of the first element of `array` where the provided `checker` function returns true.\n\nReturns `-1` if the item does not exist. Consider using `Array.findIndexOpt` if you want an option instead (where `-1` would be `None`).\n\nSee [`Array.findIndex`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex) on MDN.\n\n## Examples\n```rescript\ntype languages = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, JavaScript]\n\nConsole.log(array->Array.findIndex(item => item == ReScript)) // 0\nConsole.log(array->Array.findIndex(item => item == TypeScript)) // -1\n```\n"}
  }, {
    "label": "setSymbol",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Symbol.t, 'b) => unit",
    "documentation": null
  }, {
    "label": "equal",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>, ('a, 'a) => bool) => bool",
    "documentation": null
  }, {
    "label": "joinUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, string) => string",
    "documentation": {"kind": "markdown", "value": "\n`joinUnsafe(array, separator)` produces a string where all items of `array` are printed, separated by `separator`. Under the hood this will run JavaScript's `toString` on all the array items.\n\nSee [Array.join](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join)\n\n## Examples\n```rescript\nlet array = [1, 2, 3]\n\nConsole.log(array->Array.joinUnsafe(\" -- \")) // 1 -- 2 -- 3\n```\n"}
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`mapWithIndex(array, fn)` returns a new array with all elements from `array`, each element transformed using the provided `fn`.\n\nSee [`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\nlet mappedArray =\n  array->Array.mapWithIndex((greeting, index) =>\n    greeting ++ \" at position \" ++ Int.toString(index)\n  )\n\nConsole.log(mappedArray) // [\"Hello at position 0\", \"Hi at position 1\", \"Good bye at position 2\"]\n```\n"}
  }, {
    "label": "flatMapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => array<'b>) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`flatMapWithIndex(array, mapper)` returns a new array concatenating the arrays returned from running `mapper` on all items in `array`.\n\n## Examples\n```rescript\ntype language = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, TypeScript, JavaScript]\n\nConsole.log(\n  array->Array.flatMapWithIndex((item, index) =>\n    switch item {\n    | ReScript => [index]\n    | TypeScript => [index, index + 1]\n    | JavaScript => [index, index + 1, index + 2]\n    }\n  ),\n)\n// [0, 1, 2, 2, 3, 4]\n```\n"}
  }, {
    "label": "copyWithinToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~target: int, ~start: int) => array<'a>",
    "documentation": null
  }, {
    "label": "unshift",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": {"kind": "markdown", "value": "\n`unshift(array, item)` inserts a new item at the start of the array.\n\nBeware this will *mutate* the array.\n\nSee [`Array.unshift`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nsomeArray->Array.unshift(\"yay\")\n\nConsole.log(someArray) // [\"yay\", \"hi\", \"hello\"]\n```\n"}
  }, {
    "label": "indexOf",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => int",
    "documentation": {"kind": "markdown", "value": "\n`indexOf(array, item)` returns the index of the provided `item` in `array`. Uses [strict check for equality](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality) when comparing items.\n\nReturns `-1` if the item doesn not exist. Check out `Array.indexOfOpt` for a version that returns `None` instead of `-1` if the item does not exist.\n\nSee [`Array.indexOf`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf) on MDN.\n\n## Examples\n```rescript\nConsole.log([1, 2]->Array.indexOf(2)) // 1\nConsole.log([1, 2]->Array.indexOf(3)) // -1\nConsole.log([{\"language\": \"ReScript\"}]->Array.indexOf({\"language\": \"ReScript\"})) // -1, because of strict equality\n```\n"}
  }, {
    "label": "push",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": {"kind": "markdown", "value": "\n`push(array, item)` appends `item` to the end of `array`.\n\nBeware this will *mutate* the array.\n\nSee [`Array.push`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nsomeArray->Array.push(\"yay\")\n\nConsole.log(someArray) // [\"hi\", \"hello\", \"yay\"]\n```\n"}
  }, {
    "label": "toSorted",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, 'a) => Ordering.t) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n`toSorted(array, comparator)` returns a new, sorted array from `array`, using the `comparator` function.\n\nSee [`Array.toSorted`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toSorted) on MDN.\n\n## Examples\n```rescript\nlet someArray = [3, 2, 1]\nlet sorted = someArray->Array.toSorted(Int.compare)\n\nConsole.log(sorted) // [1, 2, 3]\nConsole.log(someArray) // [3, 2, 1]. Original unchanged\n```\n"}
  }, {
    "label": "reduceWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'b, ('b, 'a, int) => 'b) => 'b",
    "documentation": {"kind": "markdown", "value": "\n  `reduceWithIndex(x, init, fn)`\n\n  Applies `fn` to each element of `xs` from beginning to end. Function `fn` has three parameters: the item from the array and an “accumulator”, which starts with a value of `init` and the index of each element. `reduceWithIndex` returns the final value of the accumulator.\n\n  ```res example\n  Array.reduceWithIndex([1, 2, 3, 4], 0, (acc, x, i) => acc + x + i) == 16\n  ```\n"}
  }, {
    "label": "some",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\n`some(array, predicate)` returns true if `predicate` returns true for any element in `array`.\n\nSee [`Array.some`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\nConsole.log(array->Array.some(greeting => greeting === \"Hello\")) // true\n```\n"}
  }, {
    "label": "unsafe_get",
    "kind": 12,
    "tags": [1],
    "detail": "(array<'a>, int) => 'a",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use getUnsafe instead. This will be removed in v13\n\n\n`unsafe_get(array, index)` returns the element at `index` of `array`.\n\nThis is _unsafe_, meaning it will return `undefined` value if `index` does not exist in `array`.\n\nUse `Array.unsafe_get` only when you are sure the `index` exists (i.e. when using for-loop).\n\n## Examples\n```rescript\nlet array = [1, 2, 3]\nfor index in 0 to array->Array.length - 1 {\n  let value = array->Array.unsafe_get(index)\n  Console.log(value)\n}\n```\n"}
  }, {
    "label": "copyAllWithin",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~target: int) => array<'a>",
    "documentation": null
  }, {
    "label": "keepSome",
    "kind": 12,
    "tags": [],
    "detail": "array<option<'a>> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n  `keepSome(arr)`\n\n  Returns a new array containing `value` for all elements that are `Some(value)`\n  and ignoring every value that is `None`\n\n  ```res example\n  Array.keepSome([Some(1), None, Some(3)]) == [1, 3]\n  ```\n"}
  }, {
    "label": "at",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n  `at(array, index)`\n\n  Get an element by its index. Negative indices count backwards from the last item.\n\n  ## Examples\n  ```rescript\n  [\"a\", \"b\", \"c\"]->Array.at(0) // Some(\"a\")\n  [\"a\", \"b\", \"c\"]->Array.at(2) // Some(\"c\")\n  [\"a\", \"b\", \"c\"]->Array.at(3) // None\n  [\"a\", \"b\", \"c\"]->Array.at(-1) // Some(\"c\")\n  [\"a\", \"b\", \"c\"]->Array.at(-3) // Some(\"a\")\n  [\"a\", \"b\", \"c\"]->Array.at(-4) // None\n  ```\n"}
  }, {
    "label": "pop",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`pop(array)` removes the last item from `array` and returns it.\n\nBeware this will *mutate* the array.\n\nSee [`Array.pop`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nlet lastItem = someArray->Array.pop // \"hello\"\n\nConsole.log(someArray) // [\"hi\"]. Notice last item is gone.\n```\n"}
  }, {
    "label": "get",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => option<'a>",
    "documentation": {"kind": "markdown", "value": "\n`get(array, index)` returns the element at `index` of `array`.\n\nReturns `None` if the index does not exist in the array. Equivalent to doing `array[index]` in JavaScript.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\narray->Array.get(0) == Some(\"Hello\") // true\narray->Array.get(3) == None // true\n```\n"}
  }, {
    "label": "pushMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => unit",
    "documentation": {"kind": "markdown", "value": "\n`pushMany(array, itemsArray)` appends many new items to the end of the array.\n\nBeware this will *mutate* the array.\n\nSee [`Array.push`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push) on MDN.\n\n## Examples\n```rescript\nlet someArray = [\"hi\", \"hello\"]\nsomeArray->Array.pushMany([\"yay\", \"wehoo\"])\n\nConsole.log(someArray) // [\"hi\", \"hello\", \"yay\", \"wehoo\"]\n```\n"}
  }, {
    "label": "fromIterator",
    "kind": 12,
    "tags": [],
    "detail": "Iterator.t<'a> => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n `fromIterator(iterator)`\n\n  Creates an array from the provided `iterator`\n\n  ```res example\n  let map = Map.fromArray([(\"foo\", 1), (\"bar\", 2)])\n\n  Array.fromIterator(map->Map.values) // [1, 2]\n  ```\n "}
  }, {
    "label": "forEach",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => unit) => unit",
    "documentation": {"kind": "markdown", "value": "\n`forEach(array, fn)` runs the provided `fn` on every element of `array`.\n\nSee [`Array.forEach`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\n\narray->Array.forEach(item => {\n  Console.log(item)\n})\n```\n"}
  }, {
    "label": "flatMap",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => array<'b>) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`flatMap(array, mapper)` returns a new array concatenating the arrays returned from running `mapper` on all items in `array`.\n\n## Examples\n```rescript\ntype language = ReScript | TypeScript | JavaScript\n\nlet array = [ReScript, TypeScript, JavaScript]\n\nConsole.log(\n  array->Array.flatMap(item =>\n    switch item {\n    | ReScript => [1, 2, 3]\n    | TypeScript => [4, 5, 6]\n    | JavaScript => [7, 8, 9]\n    }\n  ),\n)\n// [1, 2, 3, 4, 5, 6, 7, 8, 9]\n```\n"}
  }, {
    "label": "fromArrayLike",
    "kind": 12,
    "tags": [],
    "detail": "Js.Array2.array_like<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "indexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, int) => int",
    "documentation": null
  }]

Complete src/Completion.res 5:10
posCursor:[5:10] posNoWhite:[5:9] Found expr:[5:3->5:10]
Pexp_ident Array.m:[5:3->5:10]
Completable: Cpath Value[Array, m]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Array, m]
Path Array.m
[{
    "label": "make",
    "kind": 12,
    "tags": [],
    "detail": "(~length: int, 'a) => array<'a>",
    "documentation": {"kind": "markdown", "value": "\n  `make(~length, init)`\n\n  Creates an array of length `length` initialized with the value of `init`.\n\n  ```res example\n  Array.make(~length=3, #apple) == [#apple, #apple, #apple]\n  ```\n"}
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`map(array, fn)` returns a new array with all elements from `array`, each element transformed using the provided `fn`.\n\nSee [`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\nlet mappedArray = array->Array.map(greeting => greeting ++ \" to you\")\n\nConsole.log(mappedArray) // [\"Hello to you\", \"Hi to you\", \"Good bye to you\"]\n```\n"}
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": {"kind": "markdown", "value": "\n`mapWithIndex(array, fn)` returns a new array with all elements from `array`, each element transformed using the provided `fn`.\n\nSee [`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) on MDN.\n\n## Examples\n```rescript\nlet array = [\"Hello\", \"Hi\", \"Good bye\"]\nlet mappedArray =\n  array->Array.mapWithIndex((greeting, index) =>\n    greeting ++ \" at position \" ++ Int.toString(index)\n  )\n\nConsole.log(mappedArray) // [\"Hello at position 0\", \"Hi at position 1\", \"Good bye at position 2\"]\n```\n"}
  }]

Complete src/Completion.res 15:17
posCursor:[15:17] posNoWhite:[15:16] Found expr:[15:12->15:17]
Pexp_ident Dep.c:[15:12->15:17]
Completable: Cpath Value[Dep, c]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Dep, c]
Path Dep.c
[{
    "label": "customDouble",
    "kind": 12,
    "tags": [1],
    "detail": "int => int",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use customDouble instead\n\nSome doc comment"}
  }]

Complete src/Completion.res 23:20
posCursor:[23:20] posNoWhite:[23:19] Found expr:[23:11->23:20]
Pexp_apply ...[23:11->23:18] ()
Completable: CnamedArg(Value[Lib, foo], "", [])
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lib, foo]
Path Lib.foo
Found type for function (~age: int, ~name: string) => string
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 26:13
posCursor:[26:13] posNoWhite:[26:12] Found expr:[26:3->26:13]
Completable: Cpath array<int>->m
Package opens Pervasives.JsxModules.place holder
ContextPath array<int>->m
ContextPath array<int>
CPPipe env:Completion
Path Js.Array2.m
[{
    "label": "Js.Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The function acceps two arguments: an item from the array and its\nindex number. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n## Examples\n\n```rescript\n// multiply each item in array by its position\nlet product = (item, index) => item * index\nJs.Array2.mapi([10, 11, 12], product) == [0, 11, 24]\n```\n"}
  }, {
    "label": "Js.Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n## Examples\n\n```rescript\nJs.Array2.map([12, 4, 8], x => x * x) == [144, 16, 64]\nJs.Array2.map([\"animal\", \"vegetable\", \"mineral\"], Js.String.length) == [6, 9, 7]\n```\n"}
  }]

Complete src/Completion.res 29:13
posCursor:[29:13] posNoWhite:[29:12] Found expr:[29:3->29:13]
Completable: Cpath string->toU
Package opens Pervasives.JsxModules.place holder
ContextPath string->toU
ContextPath string
CPPipe env:Completion
Path Js.String2.toU
[{
    "label": "Js.String2.toUpperCase",
    "kind": 12,
    "tags": [],
    "detail": "t => t",
    "documentation": {"kind": "markdown", "value": "\n`toUpperCase(str)` converts `str` to upper case using the locale-insensitive\ncase mappings in the Unicode Character Database. Notice that the conversion can\nexpand the number of letters in the result; for example the German ß\ncapitalizes to two Ses in a row.\n\nSee [`String.toUpperCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase)\non MDN.\n\n## Examples\n\n```rescript\nJs.String2.toUpperCase(\"abc\") == \"ABC\"\nJs.String2.toUpperCase(`Straße`) == `STRASSE`\nJs.String2.toUpperCase(`πς`) == `ΠΣ`\n```\n"}
  }]

Complete src/Completion.res 34:8
posCursor:[34:8] posNoWhite:[34:7] Found expr:[34:3->34:8]
Completable: Cpath Value[op]->e
Package opens Pervasives.JsxModules.place holder
ContextPath Value[op]->e
ContextPath Value[op]
Path op
CPPipe env:Completion
Path Belt.Option.e
[{
    "label": "Belt.Option.eqU",
    "kind": 12,
    "tags": [1],
    "detail": "(option<'a>, option<'b>, ('a, 'b) => bool) => bool",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `eq` instead\n\n\nUncurried version of `eq`\n"}
  }, {
    "label": "Belt.Option.eq",
    "kind": 12,
    "tags": [],
    "detail": "(option<'a>, option<'b>, ('a, 'b) => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\nEvaluates two optional values for equality with respect to a predicate\nfunction. If both `optValue1` and `optValue2` are `None`, returns `true`.\nIf one of the arguments is `Some(value)` and the other is `None`, returns\n`false`.\n\nIf arguments are `Some(value1)` and `Some(value2)`, returns the result of\n`predicate(value1, value2)`; the predicate function must return a bool.\n\n## Examples\n\n```rescript\nlet clockEqual = (a, b) => mod(a, 12) == mod(b, 12)\n\nopen Belt.Option\n\neq(Some(3), Some(15), clockEqual) /* true */\n\neq(Some(3), None, clockEqual) /* false */\n\neq(None, Some(3), clockEqual) /* false */\n\neq(None, None, clockEqual) /* true */\n```\n"}
  }]

Complete src/Completion.res 44:7
posCursor:[44:7] posNoWhite:[44:6] Found expr:[44:3->54:3]
Pexp_apply ...[50:9->50:10] (...[44:3->50:8], ...[51:2->54:3])
posCursor:[44:7] posNoWhite:[44:6] Found expr:[44:3->50:8]
Completable: Cpath Value[fa]->
Package opens Pervasives.JsxModules.place holder
ContextPath Value[fa]->
ContextPath Value[fa]
Path fa
CPPipe env:Completion
CPPipe type path:ForAuto.t
CPPipe pathFromEnv:ForAuto found:true
Path ForAuto.
[{
    "label": "ForAuto.abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "ForAuto.abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 47:21
posCursor:[47:21] posNoWhite:[47:20] Found expr:[47:3->47:21]
posCursor:[47:21] posNoWhite:[47:20] Found expr:[47:12->47:21]
Pexp_ident Js.Dict.u:[47:12->47:21]
Completable: Cpath Value[Js, Dict, u]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Js, Dict, u]
Path Js.Dict.u
[{
    "label": "unsafeGet",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, key) => 'a",
    "documentation": {"kind": "markdown", "value": "\n`Js.Dict.unsafeGet(key)` returns the value if the key exists, otherwise an `undefined` value is returned. Use this only when you are sure the key exists (i.e. when having used the `keys()` function to check that the key is valid).\n\n## Examples\n\n```rescript\nJs.Dict.unsafeGet(ages, \"Fred\") == 49\nJs.Dict.unsafeGet(ages, \"Paul\") // returns undefined\n```\n"}
  }, {
    "label": "unsafeDeleteKey",
    "kind": 12,
    "tags": [],
    "detail": "(t<string>, string) => unit",
    "documentation": {"kind": "markdown", "value": " Experimental internal function "}
  }]

Complete src/Completion.res 59:30
posCursor:[59:30] posNoWhite:[59:29] Found expr:[59:15->59:30]
JSX <O.Comp:[59:15->59:21] second[59:22->59:28]=...[59:29->59:30]> _children:None
Completable: Cexpression CJsxPropValue [O, Comp] second=z
Package opens Pervasives.JsxModules.place holder
ContextPath CJsxPropValue [O, Comp] second
Path O.Comp.make
[{
    "label": "zzz",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 62:23
posCursor:[62:23] posNoWhite:[62:22] Found expr:[62:15->62:23]
JSX <O.Comp:[62:15->62:21] z[62:22->62:23]=...[62:22->62:23]> _children:None
Completable: Cjsx([O, Comp], z, [z])
Package opens Pervasives.JsxModules.place holder
Path O.Comp.make
[{
    "label": "zoo",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 65:8
Attribute id:reac:[65:3->65:8] label:reac
Completable: Cdecorator(reac)
Package opens Pervasives.JsxModules.place holder
[{
    "label": "react.component",
    "kind": 4,
    "tags": [],
    "detail": "",
    "documentation": {"kind": "markdown", "value": "The `@react.component` decorator is used to annotate functions that are RescriptReact components.\n\nYou will need this decorator whenever you want to use a ReScript / React component in ReScript JSX expressions.\n\nNote: The `@react.component` decorator requires the `jsx` config to be set in your `rescript.json`/`bsconfig.json` to enable the required React transformations.\n\n[Read more and see examples in the documentation](https://rescript-lang.org/syntax-lookup#react-component-decorator)."},
    "insertTextFormat": 2
  }]

Complete src/Completion.res 68:10
posCursor:[68:10] posNoWhite:[68:9] Found expr:[0:-1->86:1]
Pexp_apply ...[80:6->80:7] (...[80:8->86:1])
Attribute id:react.let:[68:3->80:3] label:react.
Completable: Cdecorator(react.)
Package opens Pervasives.JsxModules.place holder
[{
    "label": "component",
    "kind": 4,
    "tags": [],
    "detail": "",
    "documentation": {"kind": "markdown", "value": "The `@react.component` decorator is used to annotate functions that are RescriptReact components.\n\nYou will need this decorator whenever you want to use a ReScript / React component in ReScript JSX expressions.\n\nNote: The `@react.component` decorator requires the `jsx` config to be set in your `rescript.json`/`bsconfig.json` to enable the required React transformations.\n\n[Read more and see examples in the documentation](https://rescript-lang.org/syntax-lookup#react-component-decorator)."},
    "insertTextFormat": 2
  }]

Complete src/Completion.res 71:27
posCursor:[71:27] posNoWhite:[71:26] Found expr:[71:11->71:27]
Pexp_apply ...[71:11->71:18] (~name71:20->71:24=...[71:20->71:24])
Completable: CnamedArg(Value[Lib, foo], "", [name])
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lib, foo]
Path Lib.foo
Found type for function (~age: int, ~name: string) => string
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 74:26
posCursor:[74:26] posNoWhite:[74:25] Found expr:[74:11->74:26]
Pexp_apply ...[74:11->74:18] (~age74:20->74:23=...[74:20->74:23])
Completable: CnamedArg(Value[Lib, foo], "", [age])
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lib, foo]
Path Lib.foo
Found type for function (~age: int, ~name: string) => string
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 77:32
posCursor:[77:32] posNoWhite:[77:31] Found expr:[77:11->77:32]
Pexp_apply ...[77:11->77:18] (~age77:20->77:23=...[77:25->77:28])
Completable: CnamedArg(Value[Lib, foo], "", [age])
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lib, foo]
Path Lib.foo
Found type for function (~age: int, ~name: string) => string
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 82:5
posCursor:[82:5] posNoWhite:[82:4] Found expr:[80:8->86:1]
Pexp_apply ...[80:8->80:15] (~age84:3->84:6=...[84:7->84:8], ~name85:3->85:7=...[85:8->85:10])
Completable: CnamedArg(Value[Lib, foo], "", [age, name])
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lib, foo]
Path Lib.foo
Found type for function (~age: int, ~name: string) => string
[]

Complete src/Completion.res 90:13
posCursor:[90:13] posNoWhite:[90:12] Found expr:[90:3->93:18]
Pexp_send a[90:12->90:13] e:[90:3->90:10]
Completable: Cpath Value[someObj]["a"]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[someObj]["a"]
ContextPath Value[someObj]
Path someObj
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 95:24
posCursor:[95:24] posNoWhite:[95:23] Found expr:[95:3->99:6]
Pexp_send [95:24->95:24] e:[95:3->95:22]
Completable: Cpath Value[nestedObj]["x"]["y"][""]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[nestedObj]["x"]["y"][""]
ContextPath Value[nestedObj]["x"]["y"]
ContextPath Value[nestedObj]["x"]
ContextPath Value[nestedObj]
Path nestedObj
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 99:7
posCursor:[99:7] posNoWhite:[99:6] Found expr:[99:3->102:20]
Pexp_send a[99:6->99:7] e:[99:3->99:4]
Completable: Cpath Value[o]["a"]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[o]["a"]
ContextPath Value[o]
Path o
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 104:17
posCursor:[104:17] posNoWhite:[104:16] Found expr:[104:3->125:19]
Pexp_send [104:17->104:17] e:[104:3->104:15]
Completable: Cpath Value[no]["x"]["y"][""]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[no]["x"]["y"][""]
ContextPath Value[no]["x"]["y"]
ContextPath Value[no]["x"]
ContextPath Value[no]
Path no
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }, {
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 110:5
posCursor:[110:5] posNoWhite:[110:4] Found expr:[110:3->110:5]
Pexp_field [110:3->110:4] _:[116:0->110:5]
Completable: Cpath Value[r].""
Package opens Pervasives.JsxModules.place holder
ContextPath Value[r].""
ContextPath Value[r]
Path r
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "```rescript\nx: int\n```\n\n```rescript\ntype r = {x: int, y: string}\n```"}
  }, {
    "label": "y",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\ny: string\n```\n\n```rescript\ntype r = {x: int, y: string}\n```"}
  }]

Complete src/Completion.res 113:25
posCursor:[113:25] posNoWhite:[113:24] Found expr:[113:3->113:25]
Pexp_field [113:3->113:24] _:[116:0->113:25]
Completable: Cpath Value[Objects, Rec, recordVal].""
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Objects, Rec, recordVal].""
ContextPath Value[Objects, Rec, recordVal]
Path Objects.Rec.recordVal
[{
    "label": "xx",
    "kind": 5,
    "tags": [],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "```rescript\nxx: int\n```\n\n```rescript\ntype recordt = {xx: int, ss: string}\n```"}
  }, {
    "label": "ss",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\nss: string\n```\n\n```rescript\ntype recordt = {xx: int, ss: string}\n```"}
  }]

Complete src/Completion.res 120:7
posCursor:[120:7] posNoWhite:[120:6] Found expr:[119:11->123:1]
posCursor:[120:7] posNoWhite:[120:6] Found expr:[120:5->122:5]
posCursor:[120:7] posNoWhite:[120:6] Found expr:[120:5->120:7]
Pexp_ident my:[120:5->120:7]
Completable: Cpath Value[my]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[my]
Path my
[{
    "label": "myAmazingFunction",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": null
  }]

Complete src/Completion.res 125:19
posCursor:[125:19] posNoWhite:[125:18] Found expr:[125:3->145:32]
Pexp_send [125:19->125:19] e:[125:3->125:17]
Completable: Cpath Value[Objects, object][""]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Objects, object][""]
ContextPath Value[Objects, object]
Path Objects.object
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }, {
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 151:6
posCursor:[151:6] posNoWhite:[151:5] Found expr:[151:4->151:6]
JSX <O.:[151:4->151:6] > _children:None
Completable: Cpath Module[O, ""]
Package opens Pervasives.JsxModules.place holder
ContextPath Module[O, ""]
Path O.
[{
    "label": "Comp",
    "kind": 9,
    "tags": [],
    "detail": "module Comp",
    "documentation": null
  }]

Complete src/Completion.res 157:8
posCursor:[157:8] posNoWhite:[157:7] Found expr:[157:3->157:8]
Pexp_field [157:3->157:7] _:[165:0->157:8]
Completable: Cpath Value[q].aa.""
Package opens Pervasives.JsxModules.place holder
ContextPath Value[q].aa.""
ContextPath Value[q].aa
ContextPath Value[q]
Path q
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "```rescript\nx: int\n```\n\n```rescript\ntype aa = {x: int, name: string}\n```"}
  }, {
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\nname: string\n```\n\n```rescript\ntype aa = {x: int, name: string}\n```"}
  }]

Complete src/Completion.res 159:9
posCursor:[159:9] posNoWhite:[159:8] Found expr:[159:3->159:9]
Pexp_field [159:3->159:7] n:[159:8->159:9]
Completable: Cpath Value[q].aa.n
Package opens Pervasives.JsxModules.place holder
ContextPath Value[q].aa.n
ContextPath Value[q].aa
ContextPath Value[q]
Path q
[{
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\nname: string\n```\n\n```rescript\ntype aa = {x: int, name: string}\n```"}
  }]

Complete src/Completion.res 162:6
posCursor:[162:6] posNoWhite:[162:5] Found expr:[162:3->162:6]
Pexp_construct Lis:[162:3->162:6] None
Completable: Cpath Value[Lis]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Lis]
Path Lis
[{
    "label": "List",
    "kind": 9,
    "tags": [],
    "detail": "module List",
    "documentation": null,
    "data": {
      "modulePath": "List",
      "filePath": "src/Completion.res"
    }
  }]

Complete src/Completion.res 169:16
posCursor:[169:16] posNoWhite:[169:15] Found expr:[169:4->169:16]
JSX <WithChildren:[169:4->169:16] > _children:None
Completable: Cpath Module[WithChildren]
Package opens Pervasives.JsxModules.place holder
ContextPath Module[WithChildren]
Path WithChildren
[{
    "label": "WithChildren",
    "kind": 9,
    "tags": [],
    "detail": "module WithChildren",
    "documentation": null
  }]

Complete src/Completion.res 172:16
posCursor:[172:16] posNoWhite:[172:15] Found type:[172:12->172:16]
Ptyp_constr Js.n:[172:12->172:16]
Completable: Cpath Type[Js, n]
Package opens Pervasives.JsxModules.place holder
ContextPath Type[Js, n]
Path Js.n
[{
    "label": "null_undefined",
    "kind": 22,
    "tags": [],
    "detail": "type null_undefined",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype null_undefined<'a> = nullable<'a>\n```"}
  }, {
    "label": "nullable",
    "kind": 22,
    "tags": [],
    "detail": "type nullable",
    "documentation": {"kind": "markdown", "value": "```rescript\n@unboxed\ntype nullable<'a> = Js_null_undefined.t<'a> =\n  | Value('a)\n  | @as(null) Null\n  | @as(undefined) Undefined\n```"}
  }, {
    "label": "null",
    "kind": 22,
    "tags": [],
    "detail": "type null",
    "documentation": {"kind": "markdown", "value": "```rescript\n@unboxed\ntype null<'a> = Js_null.t<'a> = Value('a) | @as(null) Null\n```"}
  }]

Complete src/Completion.res 174:20
posCursor:[174:20] posNoWhite:[174:19] Found type:[174:12->174:20]
Ptyp_constr ForAuto.:[174:12->174:20]
Completable: Cpath Type[ForAuto, ""]
Package opens Pervasives.JsxModules.place holder
ContextPath Type[ForAuto, ""]
Path ForAuto.
[{
    "label": "t",
    "kind": 22,
    "tags": [],
    "detail": "type t",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype t = int\n```"}
  }]

Complete src/Completion.res 179:13
posCursor:[179:13] posNoWhite:[179:12] Found expr:[179:11->179:13]
Pexp_construct As:[179:11->179:13] None
Completable: Cpath Value[As]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[As]
Path As
[{
    "label": "Asterix",
    "kind": 4,
    "tags": [],
    "detail": "Asterix",
    "documentation": {"kind": "markdown", "value": "```rescript\nAsterix\n```\n\n```rescript\ntype z = Allo | Asterix | Baba\n```"}
  }, {
    "label": "AsyncIterator",
    "kind": 9,
    "tags": [],
    "detail": "module AsyncIterator",
    "documentation": null,
    "data": {
      "modulePath": "AsyncIterator",
      "filePath": "src/Completion.res"
    }
  }]

Complete src/Completion.res 182:17
Pmod_ident For:[182:14->182:17]
Completable: Cpath Module[For]
Package opens Pervasives.JsxModules.place holder
ContextPath Module[For]
Path For
[{
    "label": "ForAuto",
    "kind": 9,
    "tags": [],
    "detail": "module ForAuto",
    "documentation": null
  }]

Complete src/Completion.res 190:11
posCursor:[190:11] posNoWhite:[190:10] Found expr:[190:3->190:11]
Pexp_ident Private.:[190:3->190:11]
Completable: Cpath Value[Private, ""]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[Private, ""]
Path Private.
[{
    "label": "b",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 202:6
posCursor:[202:6] posNoWhite:[202:5] Found expr:[202:3->202:6]
Pexp_ident sha:[202:3->202:6]
Completable: Cpath Value[sha]
Package opens Pervasives.JsxModules.place holder
ContextPath Value[sha]
Path sha
[]

Complete src/Completion.res 205:6
posCursor:[205:6] posNoWhite:[205:5] Found expr:[205:3->205:6]
Pexp_ident sha:[205:3->205:6]
Completable: Cpath Value[sha]
Raw opens: 1 Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 1 Completion
ContextPath Value[sha]
Path sha
[{
    "label": "shadowed",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 208:6
posCursor:[208:6] posNoWhite:[208:5] Found expr:[208:3->208:6]
Pexp_ident sha:[208:3->208:6]
Completable: Cpath Value[sha]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[sha]
Path sha
[{
    "label": "shadowed",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 221:22
posCursor:[221:22] posNoWhite:[221:21] Found expr:[221:3->224:22]
Pexp_send [221:22->221:22] e:[221:3->221:20]
Completable: Cpath Value[FAO, forAutoObject][""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[FAO, forAutoObject][""]
ContextPath Value[FAO, forAutoObject]
Path FAO.forAutoObject
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "forAutoLabel",
    "kind": 4,
    "tags": [],
    "detail": "FAR.forAutoRecord",
    "documentation": null
  }]

Complete src/Completion.res 224:37
posCursor:[224:37] posNoWhite:[224:36] Found expr:[224:3->224:37]
Pexp_field [224:3->224:36] _:[233:0->224:37]
Completable: Cpath Value[FAO, forAutoObject]["forAutoLabel"].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[FAO, forAutoObject]["forAutoLabel"].""
ContextPath Value[FAO, forAutoObject]["forAutoLabel"]
ContextPath Value[FAO, forAutoObject]
Path FAO.forAutoObject
[{
    "label": "forAuto",
    "kind": 5,
    "tags": [],
    "detail": "ForAuto.t",
    "documentation": {"kind": "markdown", "value": "```rescript\nforAuto: ForAuto.t\n```\n\n```rescript\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}\n```"}
  }, {
    "label": "something",
    "kind": 5,
    "tags": [],
    "detail": "option<int>",
    "documentation": {"kind": "markdown", "value": "```rescript\nsomething: option<int>\n```\n\n```rescript\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}\n```"}
  }]

Complete src/Completion.res 227:46
posCursor:[227:46] posNoWhite:[227:45] Found expr:[227:3->0:-1]
Completable: Cpath Value[FAO, forAutoObject]["forAutoLabel"].forAuto->
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[FAO, forAutoObject]["forAutoLabel"].forAuto->
ContextPath Value[FAO, forAutoObject]["forAutoLabel"].forAuto
ContextPath Value[FAO, forAutoObject]["forAutoLabel"]
ContextPath Value[FAO, forAutoObject]
Path FAO.forAutoObject
CPPipe env:Completion envFromCompletionItem:Completion.FAR
CPPipe type path:ForAuto.t
CPPipe pathFromEnv:ForAuto found:false
Path ForAuto.
[{
    "label": "ForAuto.abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "ForAuto.abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 230:55
posCursor:[230:55] posNoWhite:[230:54] Found expr:[230:3->230:55]
posCursor:[230:55] posNoWhite:[230:54] Found expr:[230:46->230:55]
Pexp_ident ForAuto.a:[230:46->230:55]
Completable: Cpath Value[ForAuto, a]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ForAuto, a]
Path ForAuto.a
[{
    "label": "abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 234:34
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:18->234:36]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[234:18->234:34], ...[234:34->234:35])
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:18->234:34]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[234:18->234:30], ...[234:32->234:34])
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:32->234:34]
Pexp_ident na:[234:32->234:34]
Completable: Cpath Value[na]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[na]
Path na
[{
    "label": "name",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 237:17
posCursor:[237:17] posNoWhite:[237:14] Found expr:[237:14->237:22]
Completable: Cnone
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
[]

Complete src/Completion.res 243:8
posCursor:[243:8] posNoWhite:[243:7] Found expr:[242:14->243:8]
Pexp_apply ...[243:3->243:4] (...[242:14->242:15], ...[243:5->243:8])
posCursor:[243:8] posNoWhite:[243:7] Found expr:[243:5->243:8]
Pexp_field [243:5->243:7] _:[245:0->243:8]
Completable: Cpath Value[_z].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[_z].""
ContextPath Value[_z]
Path _z
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "```rescript\nx: int\n```\n\n```rescript\ntype r = {x: int, y: string}\n```"}
  }, {
    "label": "y",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\ny: string\n```\n\n```rescript\ntype r = {x: int, y: string}\n```"}
  }]

Complete src/Completion.res 254:17
posCursor:[254:17] posNoWhite:[254:16] Found expr:[254:11->254:17]
Pexp_construct SomeLo:[254:11->254:17] None
Completable: Cpath Value[SomeLo]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[SomeLo]
Path SomeLo
[{
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module SomeLocalModule",
    "documentation": null
  }]

Complete src/Completion.res 256:29
posCursor:[256:29] posNoWhite:[256:28] Found type:[256:13->256:29]
Ptyp_constr SomeLocalModule.:[256:13->256:29]
Completable: Cpath Type[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[SomeLocalModule, ""]
Path SomeLocalModule.
[{
    "label": "zz",
    "kind": 22,
    "tags": [],
    "detail": "type zz",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype zz = int\n```"}
  }]

Complete src/Completion.res 261:33
posCursor:[261:33] posNoWhite:[261:32] Found type:[261:17->263:11]
Ptyp_constr SomeLocalModule.:[261:17->263:11]
Completable: Cpath Type[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[SomeLocalModule, ""]
Path SomeLocalModule.
[{
    "label": "zz",
    "kind": 22,
    "tags": [],
    "detail": "type zz",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype zz = int\n```"}
  }]

Complete src/Completion.res 268:21
Ptype_variant unary SomeLocal:[268:12->268:21]
Completable: Cpath Value[SomeLocal]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[SomeLocal]
Path SomeLocal
[{
    "label": "SomeLocalVariantItem",
    "kind": 4,
    "tags": [],
    "detail": "SomeLocalVariantItem",
    "documentation": {"kind": "markdown", "value": "```rescript\nSomeLocalVariantItem\n```\n\n```rescript\ntype someLocalVariant = SomeLocalVariantItem\n```"}
  }, {
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module SomeLocalModule",
    "documentation": null
  }]

Complete src/Completion.res 271:20
posCursor:[271:20] posNoWhite:[271:19] Found pattern:[271:7->274:3]
posCursor:[271:20] posNoWhite:[271:19] Found type:[271:11->274:3]
Ptyp_constr SomeLocal:[271:11->274:3]
Completable: Cpath Type[SomeLocal]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[SomeLocal]
Path SomeLocal
[{
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module SomeLocalModule",
    "documentation": null
  }]

Complete src/Completion.res 275:15
posCursor:[275:15] posNoWhite:[275:14] Found expr:[274:11->278:1]
posCursor:[275:15] posNoWhite:[275:14] Found expr:[275:5->277:3]
posCursor:[275:15] posNoWhite:[275:14] Found expr:[275:13->275:15]
Pexp_ident _w:[275:13->275:15]
Completable: Cpath Value[_w]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[_w]
Path _w
[{
    "label": "_world",
    "kind": 12,
    "tags": [],
    "detail": "'a",
    "documentation": null
  }]

Complete src/Completion.res 281:22
posCursor:[281:22] posNoWhite:[281:21] Found type:[281:21->281:22]
Ptyp_constr s:[281:21->281:22]
Completable: Cpath Type[s]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[s]
Path s
[{
    "label": "someType",
    "kind": 22,
    "tags": [],
    "detail": "type someType",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype someType = {hello: string}\n```"}
  }, {
    "label": "someLocalVariant",
    "kind": 22,
    "tags": [],
    "detail": "type someLocalVariant",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype someLocalVariant = SomeLocalVariantItem\n```"}
  }]

Complete src/Completion.res 291:30
posCursor:[291:30] posNoWhite:[291:29] Found expr:[291:11->291:32]
Pexp_apply ...[291:11->291:28] ()
Completable: CnamedArg(Value[funRecord].someFun, "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[funRecord].someFun
ContextPath Value[funRecord]
Path funRecord
Found type for function (~name: string) => unit
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 296:11
posCursor:[296:11] posNoWhite:[296:10] Found expr:[296:3->296:11]
Pexp_field [296:3->296:10] _:[299:0->296:11]
Completable: Cpath Value[retAA](Nolabel).""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[retAA](Nolabel).""
ContextPath Value[retAA](Nolabel)
ContextPath Value[retAA]
Path retAA
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "```rescript\nx: int\n```\n\n```rescript\ntype aa = {x: int, name: string}\n```"}
  }, {
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\nname: string\n```\n\n```rescript\ntype aa = {x: int, name: string}\n```"}
  }]

Complete src/Completion.res 301:13
posCursor:[301:13] posNoWhite:[301:12] Found expr:[301:3->301:13]
Pexp_apply ...[301:3->301:11] ()
Completable: CnamedArg(Value[ff](~c), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~c)
ContextPath Value[ff]
Path ff
Found type for function (
  ~opt1: int=?,
  ~a: int,
  ~b: int,
  unit,
  ~opt2: int=?,
  unit,
) => int
[{
    "label": "opt1",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 304:15
posCursor:[304:15] posNoWhite:[304:14] Found expr:[304:3->304:15]
Pexp_apply ...[304:3->304:13] ()
Completable: CnamedArg(Value[ff](~c)(Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~c)(Nolabel)
ContextPath Value[ff](~c)
ContextPath Value[ff]
Path ff
Found type for function (~a: int, ~b: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 307:17
posCursor:[307:17] posNoWhite:[307:16] Found expr:[307:3->307:17]
Pexp_apply ...[307:3->307:15] ()
Completable: CnamedArg(Value[ff](~c, Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~c, Nolabel)
ContextPath Value[ff]
Path ff
Found type for function (~a: int, ~b: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 310:21
posCursor:[310:21] posNoWhite:[310:20] Found expr:[310:3->310:21]
Pexp_apply ...[310:3->310:19] ()
Completable: CnamedArg(Value[ff](~c, Nolabel, Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~c, Nolabel, Nolabel)
ContextPath Value[ff]
Path ff
Found type for function (~a: int, ~b: int) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 313:23
posCursor:[313:23] posNoWhite:[313:22] Found expr:[313:3->313:23]
Pexp_apply ...[313:3->313:21] ()
Completable: CnamedArg(Value[ff](~c, Nolabel, ~b), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~c, Nolabel, ~b)
ContextPath Value[ff]
Path ff
Found type for function (~a: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 316:16
posCursor:[316:16] posNoWhite:[316:15] Found expr:[316:3->316:16]
Pexp_apply ...[316:3->316:14] ()
Completable: CnamedArg(Value[ff](~opt2), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff](~opt2)
ContextPath Value[ff]
Path ff
Found type for function (~opt1: int=?, ~a: int, ~b: int, unit, unit, ~c: int) => int
[{
    "label": "opt1",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "c",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 326:17
posCursor:[326:17] posNoWhite:[326:16] Found expr:[326:3->326:17]
Pexp_apply ...[326:3->326:15] ()
Completable: CnamedArg(Value[withCallback], "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[withCallback]
Path withCallback
Found type for function (~b: int) => callback
[{
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 329:21
posCursor:[329:21] posNoWhite:[329:20] Found expr:[329:3->329:21]
Pexp_apply ...[329:3->329:19] ()
Completable: CnamedArg(Value[withCallback](~a), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[withCallback](~a)
ContextPath Value[withCallback]
Path withCallback
Found type for function (~b: int) => int
[{
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 332:21
posCursor:[332:21] posNoWhite:[332:20] Found expr:[332:3->332:21]
Pexp_apply ...[332:3->332:19] ()
Completable: CnamedArg(Value[withCallback](~b), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[withCallback](~b)
ContextPath Value[withCallback]
Path withCallback
Found type for function (~a: int) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 339:26
posCursor:[339:26] posNoWhite:[339:25] Found expr:[336:3->349:23]
JSX <div:[336:3->336:6] onClick[337:4->337:11]=...[337:13->349:23]> _children:None
posCursor:[339:26] posNoWhite:[339:25] Found expr:[337:13->349:23]
posCursor:[339:26] posNoWhite:[339:25] Found expr:[337:13->341:6]
posCursor:[339:26] posNoWhite:[339:25] Found expr:[338:6->341:5]
posCursor:[339:26] posNoWhite:[339:25] Found expr:[339:16->341:5]
posCursor:[339:26] posNoWhite:[339:25] Found pattern:[339:20->341:5]
posCursor:[339:26] posNoWhite:[339:25] Found type:[339:23->341:5]
Ptyp_constr Res:[339:23->341:5]
posCursor:[339:26] posNoWhite:[339:25] Found pattern:[339:20->341:5]
posCursor:[339:26] posNoWhite:[339:25] Found type:[339:23->341:5]
Ptyp_constr Res:[339:23->341:5]
Completable: Cpath Type[Res]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[Res]
Path Res
[{
    "label": "RescriptReactErrorBoundary",
    "kind": 9,
    "tags": [],
    "detail": "module RescriptReactErrorBoundary",
    "documentation": null,
    "data": {
      "modulePath": "RescriptReactErrorBoundary",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "RescriptReactRouter",
    "kind": 9,
    "tags": [],
    "detail": "module RescriptReactRouter",
    "documentation": null,
    "data": {
      "modulePath": "RescriptReactRouter",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "RescriptTools",
    "kind": 9,
    "tags": [],
    "detail": "module RescriptTools",
    "documentation": null,
    "data": {
      "modulePath": "RescriptTools",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "RescriptTools_Docgen",
    "kind": 9,
    "tags": [],
    "detail": "module RescriptTools_Docgen",
    "documentation": null,
    "data": {
      "modulePath": "RescriptTools_Docgen",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "Result",
    "kind": 9,
    "tags": [],
    "detail": "module Result",
    "documentation": null,
    "data": {
      "modulePath": "Result",
      "filePath": "src/Completion.res"
    }
  }]

Complete src/Completion.res 346:57
posCursor:[346:57] posNoWhite:[346:56] Found expr:[346:53->349:23]
posCursor:[346:57] posNoWhite:[346:56] Found expr:[346:53->346:57]
Pexp_ident this:[346:53->346:57]
Completable: Cpath Value[this]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[this]
Path this
[{
    "label": "thisIsNotSaved",
    "kind": 12,
    "tags": [],
    "detail": "\\\"Type Not Known\"",
    "documentation": null
  }]

Hover src/Completion.res 349:14
{"contents": {"kind": "markdown", "value": "```rescript\nJsxDOM.domProps\n```\n\n---\n\n```\n \n```\n```rescript\ntype JsxDOM.domProps = {\n  key?: string,\n  children?: Jsx.element,\n  ref?: domRef,\n  ariaCurrent?: [\n    | #date\n    | #\"false\"\n    | #location\n    | #page\n    | #step\n    | #time\n    | #\"true\"\n  ],\n  ariaDetails?: string,\n  ariaDisabled?: bool,\n  ariaHidden?: bool,\n  ariaInvalid?: [#\"false\" | #grammar | #spelling | #\"true\"],\n  ariaKeyshortcuts?: string,\n  ariaLabel?: string,\n  ariaRoledescription?: string,\n  ariaAutocomplete?: [#both | #inline | #list | #none],\n  ariaChecked?: [#\"false\" | #mixed | #\"true\"],\n  ariaExpanded?: bool,\n  ariaHaspopup?: [\n    | #dialog\n    | #\"false\"\n    | #grid\n    | #listbox\n    | #menu\n    | #tree\n    | #\"true\"\n  ],\n  ariaLevel?: int,\n  ariaModal?: bool,\n  ariaMultiline?: bool,\n  ariaMultiselectable?: bool,\n  ariaOrientation?: [#horizontal | #undefined | #vertical],\n  ariaPlaceholder?: string,\n  ariaPressed?: [#\"false\" | #mixed | #\"true\"],\n  ariaReadonly?: bool,\n  ariaRequired?: bool,\n  ariaSelected?: bool,\n  ariaSort?: string,\n  ariaValuemax?: float,\n  ariaValuemin?: float,\n  ariaValuenow?: float,\n  ariaValuetext?: string,\n  ariaAtomic?: bool,\n  ariaBusy?: bool,\n  ariaLive?: [#assertive | #off | #polite | #rude],\n  ariaRelevant?: string,\n  ariaDropeffect?: [\n    | #copy\n    | #execute\n    | #link\n    | #move\n    | #none\n    | #popup\n  ],\n  ariaGrabbed?: bool,\n  ariaActivedescendant?: string,\n  ariaColcount?: int,\n  ariaColindex?: int,\n  ariaColspan?: int,\n  ariaControls?: string,\n  ariaDescribedby?: string,\n  ariaErrormessage?: string,\n  ariaFlowto?: string,\n  ariaLabelledby?: string,\n  ariaOwns?: string,\n  ariaPosinset?: int,\n  ariaRowcount?: int,\n  ariaRowindex?: int,\n  ariaRowspan?: int,\n  ariaSetsize?: int,\n  defaultChecked?: bool,\n  defaultValue?: string,\n  accessKey?: string,\n  capture?: [#environment | #user],\n  className?: string,\n  contentEditable?: bool,\n  contextMenu?: string,\n  dataTestId?: string,\n  dir?: string,\n  draggable?: bool,\n  hidden?: bool,\n  id?: string,\n  lang?: string,\n  role?: string,\n  style?: style,\n  spellCheck?: bool,\n  tabIndex?: int,\n  title?: string,\n  itemID?: string,\n  itemProp?: string,\n  itemRef?: string,\n  itemScope?: bool,\n  itemType?: string,\n  accept?: string,\n  acceptCharset?: string,\n  action?: string,\n  allowFullScreen?: bool,\n  alt?: string,\n  as_?: string,\n  async?: bool,\n  autoComplete?: string,\n  autoCapitalize?: string,\n  autoFocus?: bool,\n  autoPlay?: bool,\n  challenge?: string,\n  charSet?: string,\n  checked?: bool,\n  cite?: string,\n  crossOrigin?: string,\n  cols?: int,\n  colSpan?: int,\n  content?: string,\n  controls?: bool,\n  coords?: string,\n  data?: string,\n  dateTime?: string,\n  default?: bool,\n  defer?: bool,\n  disabled?: bool,\n  download?: string,\n  encType?: string,\n  form?: string,\n  formAction?: string,\n  formTarget?: string,\n  formMethod?: string,\n  headers?: string,\n  height?: string,\n  high?: int,\n  href?: string,\n  hrefLang?: string,\n  htmlFor?: string,\n  httpEquiv?: string,\n  icon?: string,\n  inputMode?: string,\n  integrity?: string,\n  keyType?: string,\n  kind?: string,\n  label?: string,\n  list?: string,\n  loading?: [#eager | #lazy],\n  loop?: bool,\n  low?: int,\n  manifest?: string,\n  max?: string,\n  maxLength?: int,\n  media?: string,\n  mediaGroup?: string,\n  method?: string,\n  min?: string,\n  minLength?: int,\n  multiple?: bool,\n  muted?: bool,\n  name?: string,\n  nonce?: string,\n  noValidate?: bool,\n  open_?: bool,\n  optimum?: int,\n  pattern?: string,\n  placeholder?: string,\n  playsInline?: bool,\n  poster?: string,\n  preload?: string,\n  radioGroup?: string,\n  readOnly?: bool,\n  rel?: string,\n  required?: bool,\n  reversed?: bool,\n  rows?: int,\n  rowSpan?: int,\n  sandbox?: string,\n  scope?: string,\n  scoped?: bool,\n  scrolling?: string,\n  selected?: bool,\n  shape?: string,\n  size?: int,\n  sizes?: string,\n  span?: int,\n  src?: string,\n  srcDoc?: string,\n  srcLang?: string,\n  srcSet?: string,\n  start?: int,\n  step?: float,\n  summary?: string,\n  target?: string,\n  type_?: string,\n  useMap?: string,\n  value?: string,\n  width?: string,\n  wrap?: string,\n  onCopy?: JsxEvent.Clipboard.t => unit,\n  onCut?: JsxEvent.Clipboard.t => unit,\n  onPaste?: JsxEvent.Clipboard.t => unit,\n  onCompositionEnd?: JsxEvent.Composition.t => unit,\n  onCompositionStart?: JsxEvent.Composition.t => unit,\n  onCompositionUpdate?: JsxEvent.Composition.t => unit,\n  onKeyDown?: JsxEvent.Keyboard.t => unit,\n  onKeyPress?: JsxEvent.Keyboard.t => unit,\n  onKeyUp?: JsxEvent.Keyboard.t => unit,\n  onFocus?: JsxEvent.Focus.t => unit,\n  onBlur?: JsxEvent.Focus.t => unit,\n  onBeforeInput?: JsxEvent.Form.t => unit,\n  onChange?: JsxEvent.Form.t => unit,\n  onInput?: JsxEvent.Form.t => unit,\n  onReset?: JsxEvent.Form.t => unit,\n  onSubmit?: JsxEvent.Form.t => unit,\n  onInvalid?: JsxEvent.Form.t => unit,\n  onClick?: JsxEvent.Mouse.t => unit,\n  onContextMenu?: JsxEvent.Mouse.t => unit,\n  onDoubleClick?: JsxEvent.Mouse.t => unit,\n  onDrag?: JsxEvent.Mouse.t => unit,\n  onDragEnd?: JsxEvent.Mouse.t => unit,\n  onDragEnter?: JsxEvent.Mouse.t => unit,\n  onDragExit?: JsxEvent.Mouse.t => unit,\n  onDragLeave?: JsxEvent.Mouse.t => unit,\n  onDragOver?: JsxEvent.Mouse.t => unit,\n  onDragStart?: JsxEvent.Mouse.t => unit,\n  onDrop?: JsxEvent.Mouse.t => unit,\n  onMouseDown?: JsxEvent.Mouse.t => unit,\n  onMouseEnter?: JsxEvent.Mouse.t => unit,\n  onMouseLeave?: JsxEvent.Mouse.t => unit,\n  onMouseMove?: JsxEvent.Mouse.t => unit,\n  onMouseOut?: JsxEvent.Mouse.t => unit,\n  onMouseOver?: JsxEvent.Mouse.t => unit,\n  onMouseUp?: JsxEvent.Mouse.t => unit,\n  onSelect?: JsxEvent.Selection.t => unit,\n  onTouchCancel?: JsxEvent.Touch.t => unit,\n  onTouchEnd?: JsxEvent.Touch.t => unit,\n  onTouchMove?: JsxEvent.Touch.t => unit,\n  onTouchStart?: JsxEvent.Touch.t => unit,\n  onPointerOver?: JsxEvent.Pointer.t => unit,\n  onPointerEnter?: JsxEvent.Pointer.t => unit,\n  onPointerDown?: JsxEvent.Pointer.t => unit,\n  onPointerMove?: JsxEvent.Pointer.t => unit,\n  onPointerUp?: JsxEvent.Pointer.t => unit,\n  onPointerCancel?: JsxEvent.Pointer.t => unit,\n  onPointerOut?: JsxEvent.Pointer.t => unit,\n  onPointerLeave?: JsxEvent.Pointer.t => unit,\n  onGotPointerCapture?: JsxEvent.Pointer.t => unit,\n  onLostPointerCapture?: JsxEvent.Pointer.t => unit,\n  onScroll?: JsxEvent.UI.t => unit,\n  onWheel?: JsxEvent.Wheel.t => unit,\n  onAbort?: JsxEvent.Media.t => unit,\n  onCanPlay?: JsxEvent.Media.t => unit,\n  onCanPlayThrough?: JsxEvent.Media.t => unit,\n  onDurationChange?: JsxEvent.Media.t => unit,\n  onEmptied?: JsxEvent.Media.t => unit,\n  onEncrypted?: JsxEvent.Media.t => unit,\n  onEnded?: JsxEvent.Media.t => unit,\n  onError?: JsxEvent.Media.t => unit,\n  onLoadedData?: JsxEvent.Media.t => unit,\n  onLoadedMetadata?: JsxEvent.Media.t => unit,\n  onLoadStart?: JsxEvent.Media.t => unit,\n  onPause?: JsxEvent.Media.t => unit,\n  onPlay?: JsxEvent.Media.t => unit,\n  onPlaying?: JsxEvent.Media.t => unit,\n  onProgress?: JsxEvent.Media.t => unit,\n  onRateChange?: JsxEvent.Media.t => unit,\n  onSeeked?: JsxEvent.Media.t => unit,\n  onSeeking?: JsxEvent.Media.t => unit,\n  onStalled?: JsxEvent.Media.t => unit,\n  onSuspend?: JsxEvent.Media.t => unit,\n  onTimeUpdate?: JsxEvent.Media.t => unit,\n  onVolumeChange?: JsxEvent.Media.t => unit,\n  onWaiting?: JsxEvent.Media.t => unit,\n  onLoad?: JsxEvent.Image.t => unit,\n  onAnimationStart?: JsxEvent.Animation.t => unit,\n  onAnimationEnd?: JsxEvent.Animation.t => unit,\n  onAnimationIteration?: JsxEvent.Animation.t => unit,\n  onTransitionEnd?: JsxEvent.Transition.t => unit,\n  accentHeight?: string,\n  accumulate?: string,\n  additive?: string,\n  alignmentBaseline?: string,\n  allowReorder?: string,\n  alphabetic?: string,\n  amplitude?: string,\n  arabicForm?: string,\n  ascent?: string,\n  attributeName?: string,\n  attributeType?: string,\n  autoReverse?: string,\n  azimuth?: string,\n  baseFrequency?: string,\n  baseProfile?: string,\n  baselineShift?: string,\n  bbox?: string,\n  begin?: string,\n  begin_?: string,\n  bias?: string,\n  by?: string,\n  calcMode?: string,\n  capHeight?: string,\n  clip?: string,\n  clipPath?: string,\n  clipPathUnits?: string,\n  clipRule?: string,\n  colorInterpolation?: string,\n  colorInterpolationFilters?: string,\n  colorProfile?: string,\n  colorRendering?: string,\n  contentScriptType?: string,\n  contentStyleType?: string,\n  cursor?: string,\n  cx?: string,\n  cy?: string,\n  d?: string,\n  decelerate?: string,\n  descent?: string,\n  diffuseConstant?: string,\n  direction?: string,\n  display?: string,\n  divisor?: string,\n  dominantBaseline?: string,\n  dur?: string,\n  dx?: string,\n  dy?: string,\n  edgeMode?: string,\n  elevation?: string,\n  enableBackground?: string,\n  end?: string,\n  end_?: string,\n  exponent?: string,\n  externalResourcesRequired?: string,\n  fill?: string,\n  fillOpacity?: string,\n  fillRule?: string,\n  filter?: string,\n  filterRes?: string,\n  filterUnits?: string,\n  floodColor?: string,\n  floodOpacity?: string,\n  focusable?: string,\n  fontFamily?: string,\n  fontSize?: string,\n  fontSizeAdjust?: string,\n  fontStretch?: string,\n  fontStyle?: string,\n  fontVariant?: string,\n  fontWeight?: string,\n  fomat?: string,\n  from?: string,\n  fx?: string,\n  fy?: string,\n  g1?: string,\n  g2?: string,\n  glyphName?: string,\n  glyphOrientationHorizontal?: string,\n  glyphOrientationVertical?: string,\n  glyphRef?: string,\n  gradientTransform?: string,\n  gradientUnits?: string,\n  hanging?: string,\n  horizAdvX?: string,\n  horizOriginX?: string,\n  ideographic?: string,\n  imageRendering?: string,\n  in_?: string,\n  in2?: string,\n  intercept?: string,\n  k?: string,\n  k1?: string,\n  k2?: string,\n  k3?: string,\n  k4?: string,\n  kernelMatrix?: string,\n  kernelUnitLength?: string,\n  kerning?: string,\n  keyPoints?: string,\n  keySplines?: string,\n  keyTimes?: string,\n  lengthAdjust?: string,\n  letterSpacing?: string,\n  lightingColor?: string,\n  limitingConeAngle?: string,\n  local?: string,\n  markerEnd?: string,\n  markerHeight?: string,\n  markerMid?: string,\n  markerStart?: string,\n  markerUnits?: string,\n  markerWidth?: string,\n  mask?: string,\n  maskContentUnits?: string,\n  maskUnits?: string,\n  mathematical?: string,\n  mode?: string,\n  numOctaves?: string,\n  offset?: string,\n  opacity?: string,\n  operator?: string,\n  order?: string,\n  orient?: string,\n  orientation?: string,\n  origin?: string,\n  overflow?: string,\n  overflowX?: string,\n  overflowY?: string,\n  overlinePosition?: string,\n  overlineThickness?: string,\n  paintOrder?: string,\n  panose1?: string,\n  pathLength?: string,\n  patternContentUnits?: string,\n  patternTransform?: string,\n  patternUnits?: string,\n  pointerEvents?: string,\n  points?: string,\n  pointsAtX?: string,\n  pointsAtY?: string,\n  pointsAtZ?: string,\n  preserveAlpha?: string,\n  preserveAspectRatio?: string,\n  primitiveUnits?: string,\n  r?: string,\n  radius?: string,\n  refX?: string,\n  refY?: string,\n  renderingIntent?: string,\n  repeatCount?: string,\n  repeatDur?: string,\n  requiredExtensions?: string,\n  requiredFeatures?: string,\n  restart?: string,\n  result?: string,\n  rotate?: string,\n  rx?: string,\n  ry?: string,\n  scale?: string,\n  seed?: string,\n  shapeRendering?: string,\n  slope?: string,\n  spacing?: string,\n  specularConstant?: string,\n  specularExponent?: string,\n  speed?: string,\n  spreadMethod?: string,\n  startOffset?: string,\n  stdDeviation?: string,\n  stemh?: string,\n  stemv?: string,\n  stitchTiles?: string,\n  stopColor?: string,\n  stopOpacity?: string,\n  strikethroughPosition?: string,\n  strikethroughThickness?: string,\n  string?: string,\n  stroke?: string,\n  strokeDasharray?: string,\n  strokeDashoffset?: string,\n  strokeLinecap?: string,\n  strokeLinejoin?: string,\n  strokeMiterlimit?: string,\n  strokeOpacity?: string,\n  strokeWidth?: string,\n  surfaceScale?: string,\n  systemLanguage?: string,\n  tableValues?: string,\n  targetX?: string,\n  targetY?: string,\n  textAnchor?: string,\n  textDecoration?: string,\n  textLength?: string,\n  textRendering?: string,\n  to?: string,\n  to_?: string,\n  transform?: string,\n  u1?: string,\n  u2?: string,\n  underlinePosition?: string,\n  underlineThickness?: string,\n  unicode?: string,\n  unicodeBidi?: string,\n  unicodeRange?: string,\n  unitsPerEm?: string,\n  vAlphabetic?: string,\n  vHanging?: string,\n  vIdeographic?: string,\n  vMathematical?: string,\n  values?: string,\n  vectorEffect?: string,\n  version?: string,\n  vertAdvX?: string,\n  vertAdvY?: string,\n  vertOriginX?: string,\n  vertOriginY?: string,\n  viewBox?: string,\n  viewTarget?: string,\n  visibility?: string,\n  widths?: string,\n  wordSpacing?: string,\n  writingMode?: string,\n  x?: string,\n  x1?: string,\n  x2?: string,\n  xChannelSelector?: string,\n  xHeight?: string,\n  xlinkActuate?: string,\n  xlinkArcrole?: string,\n  xlinkHref?: string,\n  xlinkRole?: string,\n  xlinkShow?: string,\n  xlinkTitle?: string,\n  xlinkType?: string,\n  xmlns?: string,\n  xmlnsXlink?: string,\n  xmlBase?: string,\n  xmlLang?: string,\n  xmlSpace?: string,\n  y?: string,\n  y1?: string,\n  y2?: string,\n  yChannelSelector?: string,\n  z?: string,\n  zoomAndPan?: string,\n  about?: string,\n  datatype?: string,\n  inlist?: string,\n  prefix?: string,\n  property?: string,\n  resource?: string,\n  typeof?: string,\n  vocab?: string,\n  dangerouslySetInnerHTML?: {\"__html\": string},\n  suppressContentEditableWarning?: bool,\n}\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxDOM.res%22%2C30%2C0%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype Jsx.element\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22Jsx.res%22%2C24%2C0%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype domRef\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxDOM.res%22%2C25%2C0%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype style = JsxDOMStyle.t\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxDOM.res%22%2C24%2C0%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Clipboard.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C95%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Composition.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C107%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Keyboard.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C118%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Focus.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C142%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Form.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C154%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Mouse.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C163%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Selection.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C244%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Touch.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C253%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Pointer.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C194%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.UI.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C278%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Wheel.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C291%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Media.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C305%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Image.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C314%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Animation.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C323%2C2%5D)\n\n\n---\n\n```\n \n```\n```rescript\ntype JsxEvent.Transition.t = synthetic<tag>\n```\nGo to: [Type definition](command:rescript-vscode.go_to_location?%5B%22JsxEvent.res%22%2C336%2C2%5D)\n"}}

Hover src/Completion.res 352:17
Nothing at that position. Now trying to use completion.
posCursor:[352:17] posNoWhite:[352:16] Found expr:[352:11->352:35]
Pexp_send age[352:30->352:33] e:[352:11->352:28]
posCursor:[352:17] posNoWhite:[352:16] Found expr:[352:11->352:28]
Pexp_ident FAO.forAutoObject:[352:11->352:28]
Completable: Cpath Value[FAO, forAutoObject]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[FAO, forAutoObject]
Path FAO.forAutoObject
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
{"contents": {"kind": "markdown", "value": "```rescript\n{\"age\": int, \"forAutoLabel\": FAR.forAutoRecord}\n```"}}

Hover src/Completion.res 355:17
Nothing at that position. Now trying to use completion.
posCursor:[355:17] posNoWhite:[355:16] Found expr:[355:11->355:22]
Pexp_apply ...[355:11->355:13] (~opt1355:15->355:19=...[355:20->355:21])
Completable: CnamedArg(Value[ff], opt1, [opt1])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ff]
Path ff
Found type for function (
  ~opt1: int=?,
  ~a: int,
  ~b: int,
  unit,
  ~opt2: int=?,
  unit,
  ~c: int,
) => int
{"contents": {"kind": "markdown", "value": "```rescript\noption<int>\n```"}}

Complete src/Completion.res 358:23
posCursor:[358:23] posNoWhite:[358:22] Found expr:[0:-1->358:23]
posCursor:[358:23] posNoWhite:[358:22] Found expr:[358:12->358:23]
[]

Complete src/Completion.res 365:8
posCursor:[365:8] posNoWhite:[365:7] Found expr:[363:8->368:3]
posCursor:[365:8] posNoWhite:[365:7] Found pattern:[365:7->367:5]
posCursor:[365:8] posNoWhite:[365:7] Found pattern:[365:7->365:8]
Ppat_construct T:[365:7->365:8]
Completable: Cpattern Value[x]=T
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[x]
Path x
Completable: Cpath Value[T]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[T]
Path T
[{
    "label": "That",
    "kind": 4,
    "tags": [],
    "detail": "That",
    "documentation": {"kind": "markdown", "value": "```rescript\nThat\n```\n\n```rescript\ntype v = This | That\n```"}
  }, {
    "label": "This",
    "kind": 4,
    "tags": [],
    "detail": "This",
    "documentation": {"kind": "markdown", "value": "```rescript\nThis\n```\n\n```rescript\ntype v = This | That\n```"}
  }, {
    "label": "TableclothMap",
    "kind": 9,
    "tags": [],
    "detail": "module TableclothMap",
    "documentation": null,
    "data": {
      "modulePath": "TableclothMap",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "Type",
    "kind": 9,
    "tags": [],
    "detail": "module Type",
    "documentation": null,
    "data": {
      "modulePath": "Type",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "TypeAtPosCompletion",
    "kind": 9,
    "tags": [],
    "detail": "module TypeAtPosCompletion",
    "documentation": null,
    "data": {
      "modulePath": "TypeAtPosCompletion",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "TypeConstraint",
    "kind": 9,
    "tags": [],
    "detail": "module TypeConstraint",
    "documentation": null,
    "data": {
      "modulePath": "TypeConstraint",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "TypeDefinition",
    "kind": 9,
    "tags": [],
    "detail": "module TypeDefinition",
    "documentation": null,
    "data": {
      "modulePath": "TypeDefinition",
      "filePath": "src/Completion.res"
    }
  }, {
    "label": "TypedArray",
    "kind": 9,
    "tags": [],
    "detail": "module TypedArray",
    "documentation": null,
    "data": {
      "modulePath": "TypedArray",
      "filePath": "src/Completion.res"
    }
  }]

Complete src/Completion.res 376:21
posCursor:[376:21] posNoWhite:[376:20] Found expr:[374:8->379:3]
posCursor:[376:21] posNoWhite:[376:20] Found pattern:[376:7->378:5]
posCursor:[376:21] posNoWhite:[376:20] Found pattern:[376:7->376:21]
Ppat_construct AndThatOther.T:[376:7->376:21]
Completable: Cpath Value[AndThatOther, T]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[AndThatOther, T]
Path AndThatOther.T
[{
    "label": "ThatOther",
    "kind": 4,
    "tags": [],
    "detail": "ThatOther",
    "documentation": {"kind": "markdown", "value": "```rescript\nThatOther\n```\n\n```rescript\ntype v = And | ThatOther\n```"}
  }]

Complete src/Completion.res 381:24
posCursor:[381:24] posNoWhite:[381:23] Found expr:[381:12->381:26]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[381:12->381:24], ...[381:24->381:25])
posCursor:[381:24] posNoWhite:[381:23] Found expr:[381:12->381:24]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[381:12->381:14], ...[381:16->381:24])
posCursor:[381:24] posNoWhite:[381:23] Found expr:[381:16->381:24]
Pexp_ident ForAuto.:[381:16->381:24]
Completable: Cpath Value[ForAuto, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ForAuto, ""]
Path ForAuto.
[{
    "label": "abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 384:38
posCursor:[384:38] posNoWhite:[384:37] Found expr:[384:12->384:41]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[384:12->384:39], ...[384:39->384:40])
posCursor:[384:38] posNoWhite:[384:37] Found expr:[384:12->384:39]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[384:12->384:17], ...[384:19->384:39])
posCursor:[384:38] posNoWhite:[384:37] Found expr:[384:19->384:39]
Pexp_send [384:38->384:38] e:[384:19->384:36]
Completable: Cpath Value[FAO, forAutoObject][""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[FAO, forAutoObject][""]
ContextPath Value[FAO, forAutoObject]
Path FAO.forAutoObject
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "forAutoLabel",
    "kind": 4,
    "tags": [],
    "detail": "FAR.forAutoRecord",
    "documentation": null
  }]

Complete src/Completion.res 387:24
posCursor:[387:24] posNoWhite:[387:23] Found expr:[387:11->387:26]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[387:11->387:24], ...[387:24->387:25])
posCursor:[387:24] posNoWhite:[387:23] Found expr:[387:11->387:24]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[387:11->387:12], ...[387:14->387:24])
posCursor:[387:24] posNoWhite:[387:23] Found expr:[387:14->387:24]
Pexp_field [387:14->387:23] _:[387:24->387:24]
Completable: Cpath Value[funRecord].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[funRecord].""
ContextPath Value[funRecord]
Path funRecord
[{
    "label": "someFun",
    "kind": 5,
    "tags": [],
    "detail": "(~name: string) => unit",
    "documentation": {"kind": "markdown", "value": "```rescript\nsomeFun: (~name: string) => unit\n```\n\n```rescript\ntype funRecord = {\n  someFun: (~name: string) => unit,\n  stuff: string,\n}\n```"}
  }, {
    "label": "stuff",
    "kind": 5,
    "tags": [],
    "detail": "string",
    "documentation": {"kind": "markdown", "value": "```rescript\nstuff: string\n```\n\n```rescript\ntype funRecord = {\n  someFun: (~name: string) => unit,\n  stuff: string,\n}\n```"}
  }]

Complete src/Completion.res 392:12
posCursor:[392:12] posNoWhite:[392:11] Found expr:[390:8->395:1]
posCursor:[392:12] posNoWhite:[392:11] Found expr:[391:2->394:4]
posCursor:[392:12] posNoWhite:[392:11] Found expr:[392:6->394:4]
posCursor:[392:12] posNoWhite:[392:11] Found expr:[392:6->392:12]
Completable: Cpath array->ma
Raw opens: 3 Js.place holder ... Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 3 Completion Completion Js
ContextPath array->ma
ContextPath array
CPPipe env:Completion
Path Js.Array2.ma
[{
    "label": "Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The function acceps two arguments: an item from the array and its\nindex number. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n## Examples\n\n```rescript\n// multiply each item in array by its position\nlet product = (item, index) => item * index\nJs.Array2.mapi([10, 11, 12], product) == [0, 11, 24]\n```\n"}
  }, {
    "label": "Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n## Examples\n\n```rescript\nJs.Array2.map([12, 4, 8], x => x * x) == [144, 16, 64]\nJs.Array2.map([\"animal\", \"vegetable\", \"mineral\"], Js.String.length) == [6, 9, 7]\n```\n"}
  }]

Complete src/Completion.res 400:14
posCursor:[400:14] posNoWhite:[400:13] Found expr:[399:14->400:20]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[399:14->400:16], ...[400:16->400:19])
posCursor:[400:14] posNoWhite:[400:13] Found expr:[399:14->400:16]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[399:14->400:11], ...[400:13->400:16])
posCursor:[400:14] posNoWhite:[400:13] Found expr:[400:13->400:16]
Pexp_ident red:[400:13->400:16]
Completable: Cpath Value[red]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[red]
Path red
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 405:25
posCursor:[405:25] posNoWhite:[405:24] Found expr:[403:14->405:31]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[403:14->405:27], ...[405:27->405:30])
posCursor:[405:25] posNoWhite:[405:24] Found expr:[403:14->405:27]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[403:14->405:22], ...[405:24->405:27])
posCursor:[405:25] posNoWhite:[405:24] Found expr:[405:24->405:27]
Pexp_ident red:[405:24->405:27]
Completable: Cpath Value[red]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[red]
Path red
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 408:22
posCursor:[408:22] posNoWhite:[408:21] Found expr:[408:11->469:0]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[408:11->426:17], ...[431:0->469:0])
posCursor:[408:22] posNoWhite:[408:21] Found expr:[408:11->426:17]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[408:11->408:19], ...[408:21->426:17])
posCursor:[408:22] posNoWhite:[408:21] Found expr:[408:21->426:17]
posCursor:[408:22] posNoWhite:[408:21] Found expr:[408:21->408:22]
Pexp_ident r:[408:21->408:22]
Completable: Cpath Value[r]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[r]
Path r
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }, {
    "label": "retAA",
    "kind": 12,
    "tags": [],
    "detail": "unit => aa",
    "documentation": null
  }, {
    "label": "r",
    "kind": 12,
    "tags": [],
    "detail": "rAlias",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype r = {x: int, y: string}\n```"}
  }]

Complete src/Completion.res 412:21
posCursor:[412:21] posNoWhite:[412:20] Found expr:[411:14->418:1]
posCursor:[412:21] posNoWhite:[412:20] Found expr:[412:5->417:17]
posCursor:[412:21] posNoWhite:[412:20] Found expr:[412:5->414:42]
posCursor:[412:21] posNoWhite:[412:20] Found expr:[412:5->414:5]
Pexp_ident SomeLocalModule.:[412:5->414:5]
Completable: Cpath Value[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[SomeLocalModule, ""]
Path SomeLocalModule.
[{
    "label": "bb",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "aa",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 415:21
posCursor:[415:21] posNoWhite:[415:20] Found expr:[411:14->418:1]
posCursor:[415:21] posNoWhite:[415:20] Found expr:[414:2->417:17]
posCursor:[415:21] posNoWhite:[415:20] Found expr:[415:5->417:17]
Pexp_apply ...[415:5->417:8] (...[417:9->417:16])
posCursor:[415:21] posNoWhite:[415:20] Found expr:[415:5->417:8]
Pexp_ident SomeLocalModule.:[415:5->417:8]
Completable: Cpath Value[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[SomeLocalModule, ""]
Path SomeLocalModule.
[{
    "label": "bb",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "aa",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 420:17
posCursor:[420:17] posNoWhite:[420:16] Found expr:[420:11->420:17]
Completable: Cpath int->t
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath int->t
ContextPath int
CPPipe env:Completion
Path Belt.Int.t
[{
    "label": "Belt.Int.toString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `int` to a `string`. Uses the JavaScript `String` constructor under the hood.\n\n## Examples\n\n```rescript\nJs.log(Belt.Int.toString(1) === \"1\") /* true */\n```\n"}
  }, {
    "label": "Belt.Int.toFloat",
    "kind": 12,
    "tags": [],
    "detail": "int => float",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `int` to a `float`.\n\n## Examples\n\n```rescript\nJs.log(Belt.Int.toFloat(1) === 1.0) /* true */\n```\n"}
  }]

Complete src/Completion.res 423:19
posCursor:[423:19] posNoWhite:[423:18] Found expr:[423:11->423:19]
Completable: Cpath float->t
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath float->t
ContextPath float
CPPipe env:Completion
Path Belt.Float.t
[{
    "label": "Belt.Float.toInt",
    "kind": 12,
    "tags": [],
    "detail": "float => int",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `float` to an `int`.\n\n## Examples\n\n```rescript\nJs.log(Belt.Float.toInt(1.0) === 1) /* true */\n```\n"}
  }, {
    "label": "Belt.Float.toString",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `float` to a `string`. Uses the JavaScript `String` constructor under the hood.\n\n## Examples\n\n```rescript\nJs.log(Belt.Float.toString(1.0) === \"1.0\") /* true */\n```\n"}
  }]

Complete src/Completion.res 428:8
posCursor:[428:8] posNoWhite:[428:7] Found expr:[428:3->428:8]
Completable: Cpath Value[ok]->g
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[ok]->g
ContextPath Value[ok]
Path ok
CPPipe env:Completion
Path Belt.Result.g
[{
    "label": "Belt.Result.getExn",
    "kind": 12,
    "tags": [],
    "detail": "t<'a, 'b> => 'a",
    "documentation": {"kind": "markdown", "value": "\n`getExn(res)`: when `res` is `Ok(n)`, returns `n` when `res` is `Error(m)`, raise an exception\n\n## Examples\n\n```rescript\nBelt.Result.getExn(Belt.Result.Ok(42)) == 42\n\nBelt.Result.getExn(Belt.Result.Error(\"Invalid data\")) /* raises exception */\n```\n"}
  }, {
    "label": "Belt.Result.getWithDefault",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a, 'b>, 'a) => 'a",
    "documentation": {"kind": "markdown", "value": "\n`getWithDefault(res, defaultValue)`: If `res` is `Ok(n)`, returns `n`,\notherwise `default`\n\n## Examples\n\n```rescript\nBelt.Result.getWithDefault(Ok(42), 0) == 42\n\nBelt.Result.getWithDefault(Error(\"Invalid Data\"), 0) == 0\n```\n"}
  }]

Complete src/Completion.res 446:15
posCursor:[446:15] posNoWhite:[446:14] Found expr:[446:3->446:15]
Pexp_field [446:3->446:12] so:[446:13->446:15]
Completable: Cpath Value[rWithDepr].so
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[rWithDepr].so
ContextPath Value[rWithDepr]
Path rWithDepr
[{
    "label": "someInt",
    "kind": 5,
    "tags": [1],
    "detail": "int",
    "documentation": {"kind": "markdown", "value": "Deprecated: \n\n```rescript\nsomeInt: int\n```\n\n```rescript\ntype someRecordWithDeprecatedField = {\n  name: string,\n  someInt: int,\n  someFloat: float,\n}\n```"}
  }, {
    "label": "someFloat",
    "kind": 5,
    "tags": [1],
    "detail": "float",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use 'someInt'.\n\n```rescript\nsomeFloat: float\n```\n\n```rescript\ntype someRecordWithDeprecatedField = {\n  name: string,\n  someInt: int,\n  someFloat: float,\n}\n```"}
  }]

Complete src/Completion.res 453:37
XXX Not found!
Completable: Cexpression Type[someVariantWithDeprecated]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[someVariantWithDeprecated]
Path someVariantWithDeprecated
[{
    "label": "DoNotUseMe",
    "kind": 4,
    "tags": [1],
    "detail": "DoNotUseMe",
    "documentation": {"kind": "markdown", "value": "Deprecated: \n\n```rescript\nDoNotUseMe\n```\n\n```rescript\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe\n```"},
    "insertText": "DoNotUseMe",
    "insertTextFormat": 2
  }, {
    "label": "UseMeInstead",
    "kind": 4,
    "tags": [],
    "detail": "UseMeInstead",
    "documentation": {"kind": "markdown", "value": "```rescript\nUseMeInstead\n```\n\n```rescript\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe\n```"},
    "insertText": "UseMeInstead",
    "insertTextFormat": 2
  }, {
    "label": "AndNotMe",
    "kind": 4,
    "tags": [1],
    "detail": "AndNotMe",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use 'UseMeInstead'\n\n```rescript\nAndNotMe\n```\n\n```rescript\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe\n```"},
    "insertText": "AndNotMe",
    "insertTextFormat": 2
  }]

Complete src/Completion.res 458:30
posCursor:[458:30] posNoWhite:[458:29] Found expr:[458:11->458:30]
Completable: Cpath Value[uncurried](Nolabel)->toS
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Value[uncurried](Nolabel)->toS
ContextPath Value[uncurried](Nolabel)
ContextPath Value[uncurried]
Path uncurried
CPPipe env:Completion
Path Belt.Int.toS
[{
    "label": "Belt.Int.toString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": {"kind": "markdown", "value": "\nConverts a given `int` to a `string`. Uses the JavaScript `String` constructor under the hood.\n\n## Examples\n\n```rescript\nJs.log(Belt.Int.toString(1) === \"1\") /* true */\n```\n"}
  }]

Complete src/Completion.res 463:30
XXX Not found!
Completable: Cexpression Type[withUncurried]->recordField(fn)
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath Type[withUncurried]
Path withUncurried
[{
    "label": "v => v",
    "kind": 12,
    "tags": [],
    "detail": "int => unit",
    "documentation": null,
    "sortText": "A",
    "insertText": "${1:v} => ${0:v}",
    "insertTextFormat": 2
  }]

Complete src/Completion.res 466:26
posCursor:[466:26] posNoWhite:[466:25] Found expr:[466:22->466:26]
Pexp_ident FAR.:[466:22->466:26]
Completable: Cpath ValueOrField[FAR, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens Pervasives.JsxModules.place holder
Resolved opens 2 Completion Completion
ContextPath ValueOrField[FAR, ""]
Path FAR.
[{
    "label": "forAutoRecord",
    "kind": 12,
    "tags": [],
    "detail": "forAutoRecord",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}\n```"}
  }, {
    "label": "forAuto",
    "kind": 5,
    "tags": [],
    "detail": "ForAuto.t",
    "documentation": {"kind": "markdown", "value": "```rescript\nforAuto: ForAuto.t\n```\n\n```rescript\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}\n```"}
  }, {
    "label": "something",
    "kind": 5,
    "tags": [],
    "detail": "option<int>",
    "documentation": {"kind": "markdown", "value": "```rescript\nsomething: option<int>\n```\n\n```rescript\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}\n```"}
  }]

