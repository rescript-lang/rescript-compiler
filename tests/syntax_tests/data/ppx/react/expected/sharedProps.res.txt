@@jsxConfig({version: 4, mode: "classic"})

module V4C1 = {
  type props = sharedProps<string>

  let make = (props: props) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4C1" = props => make(props)

    \"SharedProps$V4C1"
  }
}

module V4C2 = {
  type props<'a> = sharedProps<'a>

  let make = (props: props<_>) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4C2" = (props: props<_>) => make(props)

    \"SharedProps$V4C2"
  }
}

module V4C3 = {
  type props<'a> = sharedProps<string, 'a>

  let make = (props: props<_>) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4C3" = (props: props<_>) => make(props)

    \"SharedProps$V4C3"
  }
}

module V4C4 = {
  type props = sharedProps

  let make = (props: props) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4C4" = props => make(props)

    \"SharedProps$V4C4"
  }
}

module V4C5 = {
  type props = sharedProps<string>

  external make: React.componentLike<props, React.element> = "default"
}

module V4C6 = {
  type props<'a> = sharedProps<'a>

  external make: React.componentLike<props<_>, React.element> = "default"
}

module V4C7 = {
  type props<'a> = sharedProps<string, 'a>

  external make: React.componentLike<props<_>, React.element> = "default"
}

module V4C8 = {
  type props = sharedProps

  external make: React.componentLike<props, React.element> = "default"
}

module V4C9 = {
  type props = sharedProps

  let make = (props: props) => {
    let x: string = props.x
    let y: int = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4C9" = props => make(props)

    \"SharedProps$V4C9"
  }
}

@@jsxConfig({version: 4, mode: "automatic"})

module V4A1 = {
  type props = sharedProps<string>

  let make = (props: props) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4A1" = props => make(props)

    \"SharedProps$V4A1"
  }
}

module V4A2 = {
  type props<'a> = sharedProps<'a>

  let make = (props: props<_>) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4A2" = (props: props<_>) => make(props)

    \"SharedProps$V4A2"
  }
}

module V4A3 = {
  type props<'a> = sharedProps<string, 'a>

  let make = (props: props<_>) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4A3" = (props: props<_>) => make(props)

    \"SharedProps$V4A3"
  }
}

module V4A4 = {
  type props = sharedProps

  let make = (props: props) => {
    let x = props.x
    let y = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4A4" = props => make(props)

    \"SharedProps$V4A4"
  }
}

module V4A5 = {
  type props = sharedProps<string>

  external make: React.componentLike<props, React.element> = "default"
}

module V4A6 = {
  type props<'a> = sharedProps<'a>

  external make: React.componentLike<props<_>, React.element> = "default"
}

module V4A7 = {
  type props<'a> = sharedProps<string, 'a>

  external make: React.componentLike<props<_>, React.element> = "default"
}

module V4A8 = {
  type props = sharedProps

  external make: React.componentLike<props, React.element> = "default"
}

module V4A9 = {
  type props = sharedProps

  let make = (props: props) => {
    let x: string = props.x
    let y: int = props.y
    React.string(x ++ y)
  }
  let make = {
    let \"SharedProps$V4A9" = props => make(props)

    \"SharedProps$V4A9"
  }
}
