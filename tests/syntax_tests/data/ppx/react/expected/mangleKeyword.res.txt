@@jsxConfig({version: 4, mode: "classic"})

module C4C0 = {
  @res.jsxComponentProps
  type props<'T_open, 'T_type> = {@as("open") _open: 'T_open, @as("type") _type: 'T_type}

  let make = (props: props<_, string>) => {
    let _open = props._open
    let _type: string = props._type
    React.string(_open)
  }
  let make = {
    let \"MangleKeyword$C4C0" = (props: props<_>) => make(props)

    \"MangleKeyword$C4C0"
  }
}
module C4C1 = {
  @res.jsxComponentProps @live
  type props<'T_open, 'T_type> = {@as("open") _open: 'T_open, @as("type") _type: 'T_type}

  external make: @as("open") React.componentLike<props<string, string>, React.element> = "default"
}

let c4c0 = React.createElement(C4C0.make, {_open: "x", _type: "t"})
let c4c1 = React.createElement(C4C1.make, {_open: "x", _type: "t"})

@@jsxConfig({version: 4, mode: "automatic"})

module C4A0 = {
  @res.jsxComponentProps
  type props<'T_open, 'T_type> = {@as("open") _open: 'T_open, @as("type") _type: 'T_type}

  let make = (props: props<_, string>) => {
    let _open = props._open
    let _type: string = props._type
    React.string(_open)
  }
  let make = {
    let \"MangleKeyword$C4A0" = (props: props<_>) => make(props)

    \"MangleKeyword$C4A0"
  }
}
module C4A1 = {
  @res.jsxComponentProps @live
  type props<'T_open, 'T_type> = {@as("open") _open: 'T_open, @as("type") _type: 'T_type}

  external make: @as("open") React.componentLike<props<string, string>, React.element> = "default"
}

let c4a0 = React.jsx(C4A0.make, {_open: "x", _type: "t"})
let c4a1 = React.jsx(C4A1.make, {_open: "x", _type: "t"})
