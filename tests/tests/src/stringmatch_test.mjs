// Generated by ReScript, PLEASE EDIT WITH CARE


function tst01(s) {
  if (s === "") {
    return 0;
  } else {
    return 1;
  }
}

if (tst01("") !== 0) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      22,
      2
    ],
    Error: new Error()
  };
}

if (tst01("\x00\x00\x00\x03") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      23,
      2
    ],
    Error: new Error()
  };
}

if (tst01("\x00\x00\x00\x00\x00\x00\x00\x07") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      24,
      2
    ],
    Error: new Error()
  };
}

function tst02(s) {
  let len = s.length;
  if (s === "") {
    if (len >= 0) {
      return 1;
    }
    throw {
      RE_EXN_ID: "Assert_failure",
      _1: [
        "stringmatch_test.res",
        33,
        21
      ],
      Error: new Error()
    };
  }
  if (len !== 0) {
    if (s === "A") {
      return 2;
    } else {
      return 3;
    }
  }
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      35,
      21
    ],
    Error: new Error()
  };
}

if (tst02("") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      42,
      2
    ],
    Error: new Error()
  };
}

if (tst02("A") !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      43,
      2
    ],
    Error: new Error()
  };
}

if (tst02("B") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      44,
      2
    ],
    Error: new Error()
  };
}

if (tst02("\x00\x00\x00\x00\x00\x00\x00\x07") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      45,
      2
    ],
    Error: new Error()
  };
}

if (tst02("\x00\x00\x00\x03") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      46,
      2
    ],
    Error: new Error()
  };
}

function tst03(s) {
  switch (s) {
    case "app_const" :
      return 5;
    case "app_const_const" :
      return 9;
    case "app_const_env" :
      return 11;
    case "app_const_meth" :
      return 12;
    case "app_const_var" :
      return 10;
    case "app_env" :
      return 7;
    case "app_env_const" :
      return 14;
    case "app_meth" :
      return 8;
    case "app_meth_const" :
      return 15;
    case "app_var" :
      return 6;
    case "app_var_const" :
      return 13;
    case "get_const" :
      return 0;
    case "get_env" :
      return 2;
    case "get_meth" :
      return 3;
    case "get_var" :
      return 1;
    case "meth_app_const" :
      return 16;
    case "meth_app_env" :
      return 18;
    case "meth_app_meth" :
      return 19;
    case "meth_app_var" :
      return 17;
    case "send_const" :
      return 20;
    case "send_env" :
      return 22;
    case "send_meth" :
      return 23;
    case "send_var" :
      return 21;
    case "set_var" :
      return 4;
    default:
      return -1;
  }
}

if (tst03("get_const") !== 0) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      131,
      2
    ],
    Error: new Error()
  };
}

if (tst03("set_congt") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      132,
      2
    ],
    Error: new Error()
  };
}

if (tst03("get_var") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      133,
      2
    ],
    Error: new Error()
  };
}

if (tst03("gat_ver") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      134,
      2
    ],
    Error: new Error()
  };
}

if (tst03("get_env") !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      135,
      2
    ],
    Error: new Error()
  };
}

if (tst03("get_env") !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      136,
      2
    ],
    Error: new Error()
  };
}

if (tst03("get_meth") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      137,
      2
    ],
    Error: new Error()
  };
}

if (tst03("met_geth") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      138,
      2
    ],
    Error: new Error()
  };
}

if (tst03("set_var") !== 4) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      139,
      2
    ],
    Error: new Error()
  };
}

if (tst03("sev_tar") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      140,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const") !== 5) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      141,
      2
    ],
    Error: new Error()
  };
}

if (tst03("ppa_const") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      142,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_var") !== 6) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      143,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_var") !== 6) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      144,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_env") !== 7) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      145,
      2
    ],
    Error: new Error()
  };
}

if (tst03("epp_anv") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      146,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_meth") !== 8) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      147,
      2
    ],
    Error: new Error()
  };
}

if (tst03("atp_meph") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      148,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const_const") !== 9) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      149,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const_const") !== 9) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      150,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const_var") !== 10) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      151,
      2
    ],
    Error: new Error()
  };
}

if (tst03("atp_consp_var") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      152,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const_env") !== 11) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      153,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_constne_v") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      154,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_const_meth") !== 12) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      155,
      2
    ],
    Error: new Error()
  };
}

if (tst03("spp_conat_meth") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      156,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_var_const") !== 13) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      157,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_va_rconst") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      158,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_env_const") !== 14) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      159,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_env_const") !== 14) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      160,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_meth_const") !== 15) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      161,
      2
    ],
    Error: new Error()
  };
}

if (tst03("app_teth_consm") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      162,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_app_const") !== 16) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      163,
      2
    ],
    Error: new Error()
  };
}

if (tst03("math_epp_const") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      164,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_app_var") !== 17) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      165,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_app_var") !== 17) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      166,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_app_env") !== 18) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      167,
      2
    ],
    Error: new Error()
  };
}

if (tst03("eeth_app_mnv") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      168,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_app_meth") !== 19) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      169,
      2
    ],
    Error: new Error()
  };
}

if (tst03("meth_apt_meph") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      170,
      2
    ],
    Error: new Error()
  };
}

if (tst03("send_const") !== 20) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      171,
      2
    ],
    Error: new Error()
  };
}

if (tst03("tend_conss") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      172,
      2
    ],
    Error: new Error()
  };
}

if (tst03("send_var") !== 21) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      173,
      2
    ],
    Error: new Error()
  };
}

if (tst03("serd_van") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      174,
      2
    ],
    Error: new Error()
  };
}

if (tst03("send_env") !== 22) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      175,
      2
    ],
    Error: new Error()
  };
}

if (tst03("sen_denv") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      176,
      2
    ],
    Error: new Error()
  };
}

if (tst03("send_meth") !== 23) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      177,
      2
    ],
    Error: new Error()
  };
}

if (tst03("tend_mesh") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      178,
      2
    ],
    Error: new Error()
  };
}

function tst04(s) {
  switch (s) {
    case "AAAAAAAA" :
      return 0;
    case "AAAAAAAAAAAAAAAA" :
      return 1;
    case "AAAAAAAAAAAAAAAAAAAAAAAA" :
      return 2;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 3;
    case "BBBBBBBB" :
      return 4;
    case "BBBBBBBBBBBBBBBB" :
      return 5;
    case "BBBBBBBBBBBBBBBBBBBBBBBB" :
      return 6;
    case "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" :
      return 7;
    case "CCCCCCCC" :
      return 8;
    case "CCCCCCCCCCCCCCCC" :
      return 9;
    case "CCCCCCCCCCCCCCCCCCCCCCCC" :
      return 10;
    case "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC" :
      return 11;
    default:
      return -1;
  }
}

if (tst04("AAAAAAAA") !== 0) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      215,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAAAAAAAAAAA") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      216,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAAAAAAAAAAAAAAAAAAA") !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      217,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      218,
      2
    ],
    Error: new Error()
  };
}

if (tst04("BBBBBBBB") !== 4) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      219,
      2
    ],
    Error: new Error()
  };
}

if (tst04("BBBBBBBBBBBBBBBB") !== 5) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      220,
      2
    ],
    Error: new Error()
  };
}

if (tst04("BBBBBBBBBBBBBBBBBBBBBBBB") !== 6) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      221,
      2
    ],
    Error: new Error()
  };
}

if (tst04("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB") !== 7) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      222,
      2
    ],
    Error: new Error()
  };
}

if (tst04("CCCCCCCC") !== 8) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      223,
      2
    ],
    Error: new Error()
  };
}

if (tst04("CCCCCCCCCCCCCCCC") !== 9) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      224,
      2
    ],
    Error: new Error()
  };
}

if (tst04("CCCCCCCCCCCCCCCCCCCCCCCC") !== 10) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      225,
      2
    ],
    Error: new Error()
  };
}

if (tst04("CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC") !== 11) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      226,
      2
    ],
    Error: new Error()
  };
}

if (tst04("") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      227,
      2
    ],
    Error: new Error()
  };
}

if (tst04("DDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      228,
      2
    ],
    Error: new Error()
  };
}

if (tst04("DDDDDDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      229,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAADDDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      230,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAADDDDDDDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      231,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAADDDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      232,
      2
    ],
    Error: new Error()
  };
}

if (tst04("AAAAAAAAAAAAAAADDDD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      233,
      2
    ],
    Error: new Error()
  };
}

function tst05(s) {
  switch (s) {
    case "AAA" :
      return 0;
    case "AAAA" :
      return 1;
    case "AAAAA" :
      return 2;
    case "AAAAAA" :
      return 3;
    case "AAAAAAA" :
      return 4;
    case "AAAAAAAAAAAA" :
      return 5;
    case "AAAAAAAAAAAAAAAA" :
      return 6;
    case "AAAAAAAAAAAAAAAAAAAA" :
      return 7;
    case "BBB" :
      return 8;
    case "BBBB" :
      return 9;
    case "BBBBB" :
      return 10;
    case "BBBBBB" :
      return 11;
    case "BBBBBBB" :
      return 12;
    default:
      return -1;
  }
}

if (tst05("AAA") !== 0) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      272,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAA") !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      273,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAA") !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      274,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAA") !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      275,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAA") !== 4) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      276,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAAAAAAA") !== 5) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      277,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAAAAAAAAAAA") !== 6) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      278,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAAAAAAAAAAAAAAA") !== 7) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      279,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBB") !== 8) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      280,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBB") !== 9) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      281,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBBB") !== 10) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      282,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBBBB") !== 11) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      283,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBBBBB") !== 12) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      284,
      2
    ],
    Error: new Error()
  };
}

if (tst05("") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      285,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      286,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      287,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      288,
      2
    ],
    Error: new Error()
  };
}

if (tst05("AAAAAAAD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      289,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      290,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      291,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBBBBD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      292,
      2
    ],
    Error: new Error()
  };
}

if (tst05("BBBBBBBD") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      293,
      2
    ],
    Error: new Error()
  };
}

let s00 = "and";

let t00 = "nad";

let s01 = "as";

let t01 = "sa";

let s02 = "assert";

let t02 = "asesrt";

let s03 = "begin";

let t03 = "negib";

let s04 = "class";

let t04 = "lcass";

let s05 = "constraint";

let t05 = "constiarnt";

let s06 = "do";

let t06 = "od";

let s07 = "done";

let t07 = "eond";

let s08 = "downto";

let t08 = "dowtno";

let s09 = "else";

let t09 = "lese";

let s10 = "end";

let t10 = "edn";

let s11 = "exception";

let t11 = "exception";

let s12 = "external";

let t12 = "external";

let s13 = "false";

let t13 = "fslae";

let s14 = "for";

let t14 = "ofr";

let s15 = "fun";

let t15 = "fnu";

let s16 = "function";

let t16 = "function";

let s17 = "functor";

let t17 = "ounctfr";

let s18 = "if";

let t18 = "fi";

let s19 = "in";

let t19 = "in";

let s20 = "include";

let t20 = "inculde";

let s21 = "inherit";

let t21 = "iehnrit";

let s22 = "initializer";

let t22 = "enitializir";

let s23 = "lazy";

let t23 = "zaly";

let s24 = "let";

let t24 = "elt";

let s25 = "match";

let t25 = "match";

let s26 = "method";

let t26 = "methdo";

let s27 = "module";

let t27 = "modelu";

let s28 = "mutable";

let t28 = "butamle";

let s29 = "new";

let t29 = "wen";

let s30 = "object";

let t30 = "objcet";

let s31 = "of";

let t31 = "of";

let s32 = "open";

let t32 = "epon";

let s33 = "or";

let t33 = "ro";

let s34 = "private";

let t34 = "privaet";

let s35 = "rec";

let t35 = "rec";

let s36 = "sig";

let t36 = "gis";

let s37 = "struct";

let t37 = "scrutt";

let s38 = "then";

let t38 = "hten";

let s39 = "to";

let t39 = "to";

let s40 = "true";

let t40 = "teur";

let s41 = "try";

let t41 = "try";

let s42 = "type";

let t42 = "pyte";

let s43 = "val";

let t43 = "val";

let s44 = "virtual";

let t44 = "vritual";

let s45 = "when";

let t45 = "whne";

let s46 = "while";

let t46 = "wlihe";

let s47 = "with";

let t47 = "iwth";

let s48 = "mod";

let t48 = "mod";

let s49 = "land";

let t49 = "alnd";

let s50 = "lor";

let t50 = "rol";

let s51 = "lxor";

let t51 = "lxor";

let s52 = "lsl";

let t52 = "lsl";

let s53 = "lsr";

let t53 = "lsr";

let s54 = "asr";

let t54 = "sar";

let s55 = "A";

let t55 = "A";

let s56 = "AA";

let t56 = "AA";

let s57 = "AAA";

let t57 = "AAA";

let s58 = "AAAA";

let t58 = "AAAA";

let s59 = "AAAAA";

let t59 = "AAAAA";

let s60 = "AAAAAA";

let t60 = "AAAAAA";

let s61 = "AAAAAAA";

let t61 = "AAAAAAA";

let s62 = "AAAAAAAA";

let t62 = "AAAAAAAA";

let s63 = "AAAAAAAAA";

let t63 = "AAAAAAAAA";

let s64 = "AAAAAAAAAA";

let t64 = "AAAAAAAAAA";

let s65 = "AAAAAAAAAAA";

let t65 = "AAAAAAAAAAA";

let s66 = "AAAAAAAAAAAA";

let t66 = "AAAAAAAAAAAA";

let s67 = "AAAAAAAAAAAAA";

let t67 = "AAAAAAAAAAAAA";

let s68 = "AAAAAAAAAAAAAA";

let t68 = "AAAAAAAAAAAAAA";

let s69 = "AAAAAAAAAAAAAAA";

let t69 = "AAAAAAAAAAAAAAA";

let s70 = "AAAAAAAAAAAAAAAA";

let t70 = "AAAAAAAAAAAAAAAA";

let s71 = "AAAAAAAAAAAAAAAAA";

let t71 = "AAAAAAAAAAAAAAAAA";

let s72 = "AAAAAAAAAAAAAAAAAA";

let t72 = "AAAAAAAAAAAAAAAAAA";

let s73 = "AAAAAAAAAAAAAAAAAAA";

let t73 = "AAAAAAAAAAAAAAAAAAA";

let s74 = "AAAAAAAAAAAAAAAAAAAA";

let t74 = "AAAAAAAAAAAAAAAAAAAA";

let s75 = "AAAAAAAAAAAAAAAAAAAAA";

let t75 = "AAAAAAAAAAAAAAAAAAAAA";

let s76 = "AAAAAAAAAAAAAAAAAAAAAA";

let t76 = "AAAAAAAAAAAAAAAAAAAAAA";

let s77 = "AAAAAAAAAAAAAAAAAAAAAAA";

let t77 = "AAAAAAAAAAAAAAAAAAAAAAA";

let s78 = "AAAAAAAAAAAAAAAAAAAAAAAA";

let t78 = "AAAAAAAAAAAAAAAAAAAAAAAA";

let s79 = "AAAAAAAAAAAAAAAAAAAAAAAAA";

let t79 = "AAAAAAAAAAAAAAAAAAAAAAAAA";

let s80 = "AAAAAAAAAAAAAAAAAAAAAAAAAA";

let t80 = "AAAAAAAAAAAAAAAAAAAAAAAAAA";

let s81 = "AAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t81 = "AAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s82 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t82 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s83 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t83 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s84 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t84 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s85 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t85 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s86 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t86 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s87 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t87 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s88 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let t88 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";

let s89 = "BBBBBBBBBBBBBBB";

let t89 = "BBBBBBBBBBBBBBB";

let s90 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

let t90 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

let s91 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

let t91 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

function tst06(s) {
  switch (s) {
    case "A" :
      return 55;
    case "AA" :
      return 56;
    case "AAA" :
      return 57;
    case "AAAA" :
      return 58;
    case "AAAAA" :
      return 59;
    case "AAAAAA" :
      return 60;
    case "AAAAAAA" :
      return 61;
    case "AAAAAAAA" :
      return 62;
    case "AAAAAAAAA" :
      return 63;
    case "AAAAAAAAAA" :
      return 64;
    case "AAAAAAAAAAA" :
      return 65;
    case "AAAAAAAAAAAA" :
      return 66;
    case "AAAAAAAAAAAAA" :
      return 67;
    case "AAAAAAAAAAAAAA" :
      return 68;
    case "AAAAAAAAAAAAAAA" :
      return 69;
    case "AAAAAAAAAAAAAAAA" :
      return 70;
    case "AAAAAAAAAAAAAAAAA" :
      return 71;
    case "AAAAAAAAAAAAAAAAAA" :
      return 72;
    case "AAAAAAAAAAAAAAAAAAA" :
      return 73;
    case "AAAAAAAAAAAAAAAAAAAA" :
      return 74;
    case "AAAAAAAAAAAAAAAAAAAAA" :
      return 75;
    case "AAAAAAAAAAAAAAAAAAAAAA" :
      return 76;
    case "AAAAAAAAAAAAAAAAAAAAAAA" :
      return 77;
    case "AAAAAAAAAAAAAAAAAAAAAAAA" :
      return 78;
    case "AAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 79;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 80;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 81;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 82;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 83;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 84;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 85;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 86;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 87;
    case "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" :
      return 88;
    case "BBBBBBBBBBBBBBB" :
      return 89;
    case "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" :
      return 90;
    case "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB" :
      return 91;
    case "and" :
      return 0;
    case "as" :
      return 1;
    case "asr" :
      return 54;
    case "assert" :
      return 2;
    case "begin" :
      return 3;
    case "class" :
      return 4;
    case "constraint" :
      return 5;
    case "do" :
      return 6;
    case "done" :
      return 7;
    case "downto" :
      return 8;
    case "else" :
      return 9;
    case "end" :
      return 10;
    case "exception" :
      return 11;
    case "external" :
      return 12;
    case "false" :
      return 13;
    case "for" :
      return 14;
    case "fun" :
      return 15;
    case "function" :
      return 16;
    case "functor" :
      return 17;
    case "if" :
      return 18;
    case "in" :
      return 19;
    case "include" :
      return 20;
    case "inherit" :
      return 21;
    case "initializer" :
      return 22;
    case "land" :
      return 49;
    case "lazy" :
      return 23;
    case "let" :
      return 24;
    case "lor" :
      return 50;
    case "lsl" :
      return 52;
    case "lsr" :
      return 53;
    case "lxor" :
      return 51;
    case "match" :
      return 25;
    case "method" :
      return 26;
    case "mod" :
      return 48;
    case "module" :
      return 27;
    case "mutable" :
      return 28;
    case "new" :
      return 29;
    case "object" :
      return 30;
    case "of" :
      return 31;
    case "open" :
      return 32;
    case "or" :
      return 33;
    case "private" :
      return 34;
    case "rec" :
      return 35;
    case "sig" :
      return 36;
    case "struct" :
      return 37;
    case "then" :
      return 38;
    case "to" :
      return 39;
    case "true" :
      return 40;
    case "try" :
      return 41;
    case "type" :
      return 42;
    case "val" :
      return 43;
    case "virtual" :
      return 44;
    case "when" :
      return 45;
    case "while" :
      return 46;
    case "with" :
      return 47;
    default:
      return -1;
  }
}

if (tst06(s00) !== 0) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      582,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t00) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      583,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s01) !== 1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      584,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t01) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      585,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s02) !== 2) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      586,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t02) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      587,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s03) !== 3) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      588,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t03) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      589,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s04) !== 4) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      590,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t04) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      591,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s05) !== 5) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      592,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t05) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      593,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s06) !== 6) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      594,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t06) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      595,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s07) !== 7) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      596,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t07) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      597,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s08) !== 8) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      598,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t08) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      599,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s09) !== 9) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      600,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t09) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      601,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s10) !== 10) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      602,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t10) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      603,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s11) !== 11) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      604,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t11) !== 11) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      605,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s12) !== 12) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      606,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t12) !== 12) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      607,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s13) !== 13) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      608,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t13) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      609,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s14) !== 14) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      610,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t14) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      611,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s15) !== 15) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      612,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t15) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      613,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s16) !== 16) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      614,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t16) !== 16) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      615,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s17) !== 17) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      616,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t17) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      617,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s18) !== 18) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      618,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t18) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      619,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s19) !== 19) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      620,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t19) !== 19) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      621,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s20) !== 20) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      622,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t20) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      623,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s21) !== 21) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      624,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t21) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      625,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s22) !== 22) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      626,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t22) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      627,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s23) !== 23) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      628,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t23) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      629,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s24) !== 24) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      630,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t24) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      631,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s25) !== 25) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      632,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t25) !== 25) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      633,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s26) !== 26) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      634,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t26) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      635,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s27) !== 27) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      636,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t27) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      637,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s28) !== 28) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      638,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t28) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      639,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s29) !== 29) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      640,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t29) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      641,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s30) !== 30) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      642,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t30) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      643,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s31) !== 31) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      644,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t31) !== 31) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      645,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s32) !== 32) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      646,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t32) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      647,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s33) !== 33) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      648,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t33) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      649,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s34) !== 34) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      650,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t34) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      651,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s35) !== 35) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      652,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t35) !== 35) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      653,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s36) !== 36) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      654,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t36) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      655,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s37) !== 37) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      656,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t37) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      657,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s38) !== 38) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      658,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t38) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      659,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s39) !== 39) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      660,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t39) !== 39) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      661,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s40) !== 40) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      662,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t40) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      663,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s41) !== 41) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      664,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t41) !== 41) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      665,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s42) !== 42) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      666,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t42) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      667,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s43) !== 43) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      668,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t43) !== 43) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      669,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s44) !== 44) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      670,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t44) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      671,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s45) !== 45) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      672,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t45) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      673,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s46) !== 46) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      674,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t46) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      675,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s47) !== 47) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      676,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t47) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      677,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s48) !== 48) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      678,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t48) !== 48) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      679,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s49) !== 49) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      680,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t49) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      681,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s50) !== 50) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      682,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t50) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      683,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s51) !== 51) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      684,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t51) !== 51) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      685,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s52) !== 52) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      686,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t52) !== 52) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      687,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s53) !== 53) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      688,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t53) !== 53) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      689,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s54) !== 54) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      690,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t54) !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      691,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s55) !== 55) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      692,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t55) !== 55) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      693,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s56) !== 56) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      694,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t56) !== 56) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      695,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s57) !== 57) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      696,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t57) !== 57) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      697,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s58) !== 58) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      698,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t58) !== 58) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      699,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s59) !== 59) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      700,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t59) !== 59) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      701,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s60) !== 60) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      702,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t60) !== 60) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      703,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s61) !== 61) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      704,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t61) !== 61) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      705,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s62) !== 62) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      706,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t62) !== 62) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      707,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s63) !== 63) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      708,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t63) !== 63) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      709,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s64) !== 64) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      710,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t64) !== 64) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      711,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s65) !== 65) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      712,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t65) !== 65) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      713,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s66) !== 66) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      714,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t66) !== 66) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      715,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s67) !== 67) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      716,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t67) !== 67) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      717,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s68) !== 68) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      718,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t68) !== 68) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      719,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s69) !== 69) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      720,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t69) !== 69) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      721,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s70) !== 70) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      722,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t70) !== 70) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      723,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s71) !== 71) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      724,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t71) !== 71) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      725,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s72) !== 72) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      726,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t72) !== 72) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      727,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s73) !== 73) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      728,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t73) !== 73) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      729,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s74) !== 74) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      730,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t74) !== 74) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      731,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s75) !== 75) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      732,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t75) !== 75) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      733,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s76) !== 76) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      734,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t76) !== 76) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      735,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s77) !== 77) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      736,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t77) !== 77) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      737,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s78) !== 78) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      738,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t78) !== 78) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      739,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s79) !== 79) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      740,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t79) !== 79) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      741,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s80) !== 80) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      742,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t80) !== 80) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      743,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s81) !== 81) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      744,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t81) !== 81) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      745,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s82) !== 82) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      746,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t82) !== 82) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      747,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s83) !== 83) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      748,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t83) !== 83) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      749,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s84) !== 84) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      750,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t84) !== 84) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      751,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s85) !== 85) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      752,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t85) !== 85) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      753,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s86) !== 86) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      754,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t86) !== 86) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      755,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s87) !== 87) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      756,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t87) !== 87) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      757,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s88) !== 88) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      758,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t88) !== 88) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      759,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s89) !== 89) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      760,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t89) !== 89) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      761,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s90) !== 90) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      762,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t90) !== 90) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      763,
      2
    ],
    Error: new Error()
  };
}

if (tst06(s91) !== 91) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      764,
      2
    ],
    Error: new Error()
  };
}

if (tst06(t91) !== 91) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      765,
      2
    ],
    Error: new Error()
  };
}

if (tst06("") !== -1) {
  throw {
    RE_EXN_ID: "Assert_failure",
    _1: [
      "stringmatch_test.res",
      766,
      2
    ],
    Error: new Error()
  };
}

export {
  tst01,
  tst02,
  tst03,
  tst04,
  tst05,
  s00,
  t00,
  s01,
  t01,
  s02,
  t02,
  s03,
  t03,
  s04,
  t04,
  s05,
  t05,
  s06,
  t06,
  s07,
  t07,
  s08,
  t08,
  s09,
  t09,
  s10,
  t10,
  s11,
  t11,
  s12,
  t12,
  s13,
  t13,
  s14,
  t14,
  s15,
  t15,
  s16,
  t16,
  s17,
  t17,
  s18,
  t18,
  s19,
  t19,
  s20,
  t20,
  s21,
  t21,
  s22,
  t22,
  s23,
  t23,
  s24,
  t24,
  s25,
  t25,
  s26,
  t26,
  s27,
  t27,
  s28,
  t28,
  s29,
  t29,
  s30,
  t30,
  s31,
  t31,
  s32,
  t32,
  s33,
  t33,
  s34,
  t34,
  s35,
  t35,
  s36,
  t36,
  s37,
  t37,
  s38,
  t38,
  s39,
  t39,
  s40,
  t40,
  s41,
  t41,
  s42,
  t42,
  s43,
  t43,
  s44,
  t44,
  s45,
  t45,
  s46,
  t46,
  s47,
  t47,
  s48,
  t48,
  s49,
  t49,
  s50,
  t50,
  s51,
  t51,
  s52,
  t52,
  s53,
  t53,
  s54,
  t54,
  s55,
  t55,
  s56,
  t56,
  s57,
  t57,
  s58,
  t58,
  s59,
  t59,
  s60,
  t60,
  s61,
  t61,
  s62,
  t62,
  s63,
  t63,
  s64,
  t64,
  s65,
  t65,
  s66,
  t66,
  s67,
  t67,
  s68,
  t68,
  s69,
  t69,
  s70,
  t70,
  s71,
  t71,
  s72,
  t72,
  s73,
  t73,
  s74,
  t74,
  s75,
  t75,
  s76,
  t76,
  s77,
  t77,
  s78,
  t78,
  s79,
  t79,
  s80,
  t80,
  s81,
  t81,
  s82,
  t82,
  s83,
  t83,
  s84,
  t84,
  s85,
  t85,
  s86,
  t86,
  s87,
  t87,
  s88,
  t88,
  s89,
  t89,
  s90,
  t90,
  s91,
  t91,
  tst06,
}
/*  Not a pure module */
