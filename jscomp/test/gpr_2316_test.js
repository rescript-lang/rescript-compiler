// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");
let Caml_js_exceptions = require("../../lib/js/caml_js_exceptions.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + String(test_id.contents)),
      (function () {
        return {
          TAG: "Eq",
          _0: x,
          _1: y
        };
      })
    ],
    tl: suites.contents
  };
}

let y;

try {
  throw new Error("Failure", {
    cause: {
      RE_EXN_ID: "Failure",
      _1: "boo"
    }
  });
} catch (raw_msg) {
  let msg = Caml_js_exceptions.internalToOCamlException(raw_msg);
  if (msg.RE_EXN_ID === "Failure") {
    y = msg._1;
  } else {
    throw msg;
  }
}

let x;

let exit = 0;

try {
  throw new Error("Failure", {
    cause: {
      RE_EXN_ID: "Failure",
      _1: "boo"
    }
  });
} catch (raw_msg$1) {
  let msg$1 = Caml_js_exceptions.internalToOCamlException(raw_msg$1);
  if (msg$1.RE_EXN_ID === "Failure") {
    x = msg$1._1;
  } else {
    throw msg$1;
  }
}

if (exit === 1) {
  console.log("ok");
  x = undefined;
}

eq("File \"gpr_2316_test.res\", line 22, characters 5-12", y, "boo");

eq("File \"gpr_2316_test.res\", line 23, characters 5-12", x, "boo");

Mt.from_pair_suites("Gpr_2316_test", suites.contents);

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.y = y;
exports.x = x;
/* y Not a pure module */
